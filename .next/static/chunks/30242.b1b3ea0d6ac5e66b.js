"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[30242],{16431:(a,t,e)=>{e.d(t,{u:()=>n});let n=(0,e(23802).xH)({blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}],id:1,name:"Ethereum",nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"}})},30242:(a,t,e)=>{e.d(t,{autoConnectInAppWallet:()=>I,connectInAppWallet:()=>A,e:()=>f});var n=e(16431),i=e(57634),s=e(23802),r=e(64797),c=e(2579),o=e(3702),d=e(66971);let u=[{components:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],name:"calls",type:"tuple[]"}],l=[];var h=e(81647),m=e(99232),p=e(25955),y=e(40633);let w="0xD6999651Fc0964B9c6B444307a0ab20534a66560";async function g(a){let t=await (0,r._)(a),e=t.length>0&&t.startsWith("0xef0100"),n=`0x${t.slice(8,48)}`;return e&&n.toLowerCase()===w.toLowerCase()}async function v(a){let t=a.timeoutMs||12e4,e=a.intervalMs||1e3,n=Date.now()+t;for(;Date.now()<n;){let t=await (0,y._j)({options:a.options,transactionId:a.transactionId});if(t.transactionHash)return t.transactionHash;await new Promise(a=>setTimeout(a,e))}throw Error(`Timeout waiting for transaction to be mined on chain ${a.options.chain.id} with transactionId: ${a.transactionId}`)}function f(a){return"inApp"===a.id||"embedded"===a.id}async function A(a,t,e){if(t?.auth?.mode!=="popup"&&t?.auth?.mode!==void 0&&e.authenticateWithRedirect){let n=a.strategy;i.Y.includes(n)&&await e.authenticateWithRedirect(n,t?.auth?.mode,t?.auth?.redirectUrl)}return P({authAccount:(await e.connect(a)).user.account,client:a.client,createOptions:t,desiredChain:a.chain})}async function I(a,t,e){a.authResult&&e.loginWithAuthToken&&await e.loginWithAuthToken(a.authResult);let n=await x(e);if(!n)throw Error("Failed to authenticate user.");return P({authAccount:n.account,client:a.client,createOptions:t,desiredChain:a.chain})}async function b(a){let{connectSmartAccount:t}=await Promise.all([e.e(99134),e.e(11220)]).then(e.bind(e,11220));return t({chain:a.chain,client:a.client,personalAccount:a.authAccount},a.smartAccountOptions)}async function x(a){let t=await a.getUser();if("Logged In, Wallet Initialized"===t.status)return t}async function P(a){let t,e,{createOptions:i,authAccount:r,desiredChain:f,client:A}=a,I=i&&"executionMode"in i?i.executionMode:void 0;if(I&&("EIP4337"===I.mode?t=I.smartAccount:"EIP7702"===I.mode&&(e=I)),i&&"smartAccount"in i&&i?.smartAccount&&(t=i.smartAccount),t){let[a,e]=await b({authAccount:r,chain:f,client:A,smartAccountOptions:t});return{account:a,adminAccount:r,chain:e}}if(e){if(!f)throw Error("Chain is required for EIP-7702 execution, pass a chain when connecting the inAppWallet.");return{account:(a=>{let{client:t,adminAccount:e,sponsorGas:n}=a,i=async a=>{let i,r=a[0];if(!r)throw Error("No transactions provided");let f=(0,s.Q4)(r.chainId),A=(0,c.P)({address:e.address,chain:f,client:t});if(!await g(A)){let a=r.nonce?BigInt(r.nonce)+(n?0n:1n):0n,t=await e.signAuthorization?.({address:w,chainId:r.chainId,nonce:a});if(!t)throw Error("Failed to sign authorization");i=t}if(n){let n={calls:a.map(a=>({data:a.data??"0x",target:(0,m.bv)(a.to??""),value:a.value??0n})),uid:(0,p.O)()},c=await e.signTypedData({domain:{chainId:r.chainId,name:"MinimalAccount",verifyingContract:A.address,version:"1"},message:n,primaryType:"WrappedCalls",types:{Call:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],WrappedCalls:[{name:"calls",type:"Call[]"},{name:"uid",type:"bytes32"}]}}),o=await (0,y.CJ)({authorization:i,eoaAddress:(0,m.bv)(e.address),options:{chain:(0,s.Q4)(r.chainId),client:t},signature:c,wrappedCalls:n});return{transactionHash:await v({options:{chain:(0,s.Q4)(r.chainId),client:t},transactionId:o.transactionId})}}let I=function(a){let t=(0,d.O)(async()=>"asyncParams"in a?await a.asyncParams():a);return(0,o.m)({accessList:async()=>(await t()).overrides?.accessList,authorizationList:async()=>(await t()).overrides?.authorizationList,contract:a.contract,erc20Value:async()=>(await t()).overrides?.erc20Value,extraGas:async()=>(await t()).overrides?.extraGas,gas:async()=>(await t()).overrides?.gas,gasPrice:async()=>(await t()).overrides?.gasPrice,maxFeePerGas:async()=>(await t()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await t()).overrides?.maxPriorityFeePerGas,method:["0x3f707e6b",u,l],nonce:async()=>(await t()).overrides?.nonce,params:async()=>[(await t()).calls],value:async()=>(await t()).overrides?.value})}({calls:a.map(a=>({data:a.data??"0x",target:a.to??"",value:a.value??0n})),contract:A,overrides:{authorizationList:i?[i]:void 0,value:a.reduce((a,t)=>a+(t.value??0n),0n)}}),b=await (0,h.$)({from:e.address,transaction:I});return e.sendTransaction(b)};return{address:e.address,sendBatchTransaction:async a=>i(a),sendTransaction:async a=>i([a]),signMessage:({message:a,originalMessage:t,chainId:n})=>e.signMessage({chainId:n,message:a,originalMessage:t}),signTypedData:a=>e.signTypedData(a)}})({adminAccount:r,client:A,sponsorGas:e.sponsorGas}),adminAccount:r,chain:f}}return{account:r,chain:f||n.u}}},57634:(a,t,e)=>{e.d(t,{N:()=>i,Y:()=>n});let n=["google","apple","facebook","discord","line","x","coinbase","farcaster","telegram","github","twitch","steam"],i=[...n,"guest","backend","email","phone","passkey","wallet"]}}]);