"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4098],{4098:(a,e,s)=>{s.d(e,{fulfillRequest:()=>h});var t=s(79460),r=s(52731),n=s(37653),i=s(95996),p=s(32627),m=s(31263);async function h(a){let e,{wallet:h,walletConnectClient:o,thirdwebClient:c,event:{topic:l,id:w,params:{chainId:d,request:_}},handlers:u}=a,g=h.getAccount();if(!g)throw Error("No account connected to provided wallet");try{switch(_.method){case"personal_sign":e=u?.personal_sign?await u.personal_sign({account:g,params:_.params}):await (0,n.N)({account:g,params:_.params});break;case"eth_sign":e=u?.eth_sign?await u.eth_sign({account:g,params:_.params}):await (0,n.N)({account:g,params:_.params});break;case"eth_signTypedData":e=u?.eth_signTypedData?await u.eth_signTypedData({account:g,params:_.params}):await (0,p.l)({account:g,params:_.params});break;case"eth_signTypedData_v4":e=u?.eth_signTypedData_v4?await u.eth_signTypedData_v4({account:g,params:_.params}):await (0,p.l)({account:g,params:_.params});break;case"eth_signTransaction":e=u?.eth_signTransaction?await u.eth_signTransaction({account:g,params:_.params}):await (0,i.b)({account:g,params:_.params});break;case"eth_sendTransaction":{let a=(0,m.p)(d);e=u?.eth_sendTransaction?await u.eth_sendTransaction({account:g,chainId:a,params:_.params}):await (0,r.o)({account:g,chainId:a,params:_.params,thirdwebClient:c});break}case"eth_sendRawTransaction":{let a=(0,m.p)(d);e=u?.eth_sendRawTransaction?await u.eth_sendRawTransaction({account:g,chainId:a,params:_.params}):await (0,t.G)({account:g,chainId:a,params:_.params});break}case"wallet_addEthereumChain":if(u?.wallet_addEthereumChain)e=await u.wallet_addEthereumChain({params:_.params,wallet:h});else throw Error("Unsupported request method: wallet_addEthereumChain");break;case"wallet_switchEthereumChain":if(u?.wallet_switchEthereumChain)e=await u.wallet_switchEthereumChain({params:_.params,wallet:h});else{let{handleSwitchChain:a}=await Promise.resolve().then(s.bind(s,50536));e=await a({params:_.params,wallet:h})}break;default:{let a=u?.[_.method];if(a)e=await a({account:g,chainId:(0,m.p)(d),params:_.params});else throw Error(`Unsupported request method: ${_.method}`)}}}catch(a){e={code:"object"==typeof a&&null!==a&&"code"in a?a.code:500,message:"object"==typeof a&&null!==a&&"message"in a?a.message:"Unknown error"}}o.respond({response:{id:w,jsonrpc:"2.0",result:e},topic:l})}}}]);