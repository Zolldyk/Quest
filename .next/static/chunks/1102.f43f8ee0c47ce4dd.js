"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1102,26489],{1102:(e,t,n)=>{n.d(t,{getInstalledModules:()=>i});var a=n(26489);let r=[],o=[{components:[{name:"implementation",type:"address"},{components:[{name:"registerInstallationCallback",type:"bool"},{name:"requiredInterfaces",type:"bytes4[]"},{name:"supportedInterfaces",type:"bytes4[]"},{components:[{name:"selector",type:"bytes4"}],name:"callbackFunctions",type:"tuple[]"},{components:[{name:"selector",type:"bytes4"},{name:"permissionBits",type:"uint256"}],name:"fallbackFunctions",type:"tuple[]"}],name:"config",type:"tuple"}],type:"tuple[]"}];async function i(e){return(0,a.readContract)({contract:e.contract,method:["0x3e429396",r,o],params:[]})}},26489:(e,t,n)=>{n.d(t,{readContract:()=>u});var a=n(57368),r=n(31276),o=n(23471);async function i(e,t){let{blockNumber:n,blockTag:a,...r}=t,i=(n?(0,o.cK)(n):void 0)||a||"latest";return await e({method:"eth_call",params:t.stateOverrides?[r,i,Object.fromEntries(Object.entries(t.stateOverrides).map(([e,t])=>[e,{balance:t.balance?(0,o.cK)(t.balance):void 0,code:t.code,nonce:t.nonce?(0,o.cK)(t.nonce):void 0,state:t.state,stateDiff:t.stateDiff}]))]:[r,i]})}var s=n(92942),c=n(33267),l=n(79840),p=n(99232),f=n(36217);async function u(e){let t,{contract:n,method:o,params:u}=e,d=async()=>{if(Array.isArray(o))return o;if((0,f.d)(o))return(0,l.v)(o);if("function"==typeof o)return(0,l.v)(await o(n));if("string"==typeof o&&o.startsWith("function ")){let e=(0,a.$)(o);if("function"===e.type)return(0,l.v)(e);throw Error('"method" passed is not of type "function"')}if(n.abi&&n.abi?.length>0){let e=n.abi?.find(e=>"function"===e.type&&e.name===o);if(e)return(0,l.v)(e)}throw Error(`Could not resolve method "${o}".`)},[m,y]=await Promise.all([d(),"function"==typeof u?u():u]);t=0===m[1].length?m[0]:m[0]+(0,c.hd)(m[1],y).slice(2);let b=(0,s.getRpcClient)({chain:n.chain,client:n.client}),h=await i(b,{data:t,from:e.from?(0,p.bv)(e.from):void 0,to:n.address}),v=(0,r.n)(m[2],h);return Array.isArray(v)&&1===v.length?v[0]:v}}}]);