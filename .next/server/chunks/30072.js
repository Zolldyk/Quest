"use strict";exports.id=30072,exports.ids=[30072,59654],exports.modules={19592:(a,b,c)=>{async function d(a){let[{getV1WalletsByWalletAddressTransactions:b},{getThirdwebDomains:d},{getClientFetch:e},{assertInsightEnabled:f},{stringify:g}]=await Promise.all([c.e(12790).then(c.bind(c,12790)),Promise.resolve().then(c.bind(c,20985)),Promise.resolve().then(c.bind(c,86073)),c.e(10100).then(c.bind(c,10100)),Promise.resolve().then(c.bind(c,21984))]);await f(a.chains);let h=Math.floor((Date.now()-7776e6)/1e3),{client:i,walletAddress:j,chains:k,queryOptions:l}=a,m={chain:k.map(a=>a.id),filter_block_timestamp_gte:h,limit:100},n=await b({baseUrl:`https://${d().insight}`,fetch:e(i),path:{wallet_address:j},query:{...m,...l}});if(n.error)throw Error(`${n.response.status} ${n.response.statusText} - ${n.error?g(n.error):"Unknown error"}`);return n.data.data||[]}c.d(b,{Kj:()=>h,kM:()=>i,U8:()=>g});var e=c(26913);let f=new Map;function g(a){let b=f.get(a);if(b)return b;let c=(0,e.y)([]);return f.set(a,c),c}function h(a){let{address:b,transactionHash:c,chainId:d}=a,e=g(b);e.setValue([...e.getValue(),{chainId:d,transactionHash:c}]),f.set(b,e)}async function i(a){let{walletAddress:b,chain:c,client:e}=a,f=Math.floor((Date.now()-2592e6)/1e3);return(await d({chains:[c],client:e,queryOptions:{filter_block_timestamp_gte:f,limit:20},walletAddress:b})).map(a=>({chainId:"string"==typeof a.chain_id?Number(a.chain_id):a.chain_id,receipt:{status:1===a.status?"success":"failed",to:a.to_address},transactionHash:a.hash}))}},30072:(a,b,c)=>{c.d(b,{connectSmartAccount:()=>aC,disconnectSmartAccount:()=>aD});var d=c(44472),e=c(66997),f=c(64656),g=c(48691),h=c(59654);let i=[{name:"owner",type:"address"},{name:"spender",type:"address"}],j=[{type:"uint256"}];async function k(a){return(0,h.readContract)({contract:a.contract,method:["0xdd62ed3e",i,j],params:[a.owner,a.spender]})}var l=c(44543),m=c(186),n=c(47301);let o=[{name:"spender",type:"address"},{name:"value",type:"uint256"}],p=[{type:"bool"}];var q=c(49976),r=c(73566);let s=[{name:"signer",type:"address"}],t=[{components:[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"startTimestamp",type:"uint128"},{name:"endTimestamp",type:"uint128"}],name:"permissions",type:"tuple"}];async function u(a){return(0,h.readContract)({contract:a.contract,method:["0xf15d424e",s,t],params:[a.signer]})}let v=[{components:[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],name:"req",type:"tuple"},{name:"signature",type:"bytes"}],w=[];var x=c(63149);function y(){return new Date(Date.now()+31536e7)}function z(a){return(0,x.Dg)(Math.floor(a.getTime()/1e3))}var A=c(73501);let B=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];async function C(a){let{account:b,contract:c,req:d}=a,e=await b.signTypedData({domain:{chainId:c.chain.id,name:"Account",verifyingContract:c.address,version:"1"},message:d,primaryType:"SignerPermissionRequest",types:{SignerPermissionRequest:B}});return{req:d,signature:e}}async function D(a){let{target:b,permissions:c}=a;return{approvedTargets:"*"===c.approvedTargets?[q.cF]:c.approvedTargets,isAdmin:0,nativeTokenLimitPerTransaction:(0,l.fq)(c.nativeTokenLimitPerTransaction?.toString()||"0"),permissionEndTimestamp:z(c.permissionEndTimestamp||y()),permissionStartTimestamp:z(c.permissionStartTimestamp||new Date(0)),reqValidityEndTimestamp:z(y()),reqValidityStartTimestamp:0n,signer:b,uid:await (0,A.O)()}}async function E(a){var b,c;let{accountContract:d,sessionKeyAddress:e,newPermissions:f}=a;if(!await (0,r.isContractDeployed)(d))return!0;let g=await u({contract:d,signer:e});return!!(g.endTimestamp&&g.endTimestamp<Math.floor(Date.now()/1e3)||(b=g.approvedTargets,!("*"===(c=f.approvedTargets)&&1===b.length&&b[0]===q.cF||"*"!==c&&c.map(a=>a.toLowerCase()).every(a=>b.map(a=>a.toLowerCase()).includes(a))))||(0,l.fq)(f.nativeTokenLimitPerTransaction?.toString()??"0")>g.nativeTokenLimitPerTransaction)}var F=c(97171),G=c(13623),H=c(82601),I=c(77184),J=c(13006),K=c(98688),L=c(21267);let M=2n**96n-1n;var N=c(87731),O=c(95784),P=c(19772),Q=c(11486),R=c(772);let S=[{name:"sender",type:"address"},{name:"key",type:"uint192"}],T=[{name:"nonce",type:"uint256"}];async function U(a){return(0,h.readContract)({contract:a.contract,method:["0x35567e1a",S,T],params:[a.sender,a.key]})}let V=[{components:[{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"initCode",type:"bytes"},{name:"callData",type:"bytes"},{name:"callGasLimit",type:"uint256"},{name:"verificationGasLimit",type:"uint256"},{name:"preVerificationGas",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymasterAndData",type:"bytes"},{name:"signature",type:"bytes"}],name:"userOp",type:"tuple"}],W=[{type:"bytes32"}];async function X(a){return(0,h.readContract)({contract:a.contract,method:["0xa6193531",V,W],params:[a.userOp]})}let Y=[{components:[{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"initCode",type:"bytes"},{name:"callData",type:"bytes"},{name:"accountGasLimits",type:"bytes32"},{name:"preVerificationGas",type:"uint256"},{name:"gasFees",type:"bytes32"},{name:"paymasterAndData",type:"bytes"},{name:"signature",type:"bytes"}],name:"userOp",type:"tuple"}],Z=[{type:"bytes32"}];async function $(a){return(0,h.readContract)({contract:a.contract,method:["0x22cdde4c",Y,Z],params:[a.userOp]})}var _=c(49137),aa=c(94443),ab=c(28425),ac=c(43533),ad=c(56233),ae=c(86073),af=c(27924),ag=c(21984),ah=c(72675),ai=c(6981),aj=c(424);async function ak(a){let{userOp:b,paymasterOverride:c,client:d,chain:e,entrypointAddress:f}=a;if(c)return c(b);let g=f??P.uh,h=(0,P.RZ)(e),i={id:1,jsonrpc:"2.0",method:"pm_sponsorUserOperation",params:[(0,aj.K)(b),g]},j=(0,ae.getClientFetch)(d),k=await j(h,{body:(0,ag.stringify)(i),headers:{"Content-Type":"application/json"},method:"POST"});if(!k.ok){let a=await k.text()||k.statusText;throw Error(`Paymaster error: ${k.status} - ${a}`)}let l=await k.json();if(l.result)return"string"==typeof l.result?{paymasterAndData:l.result}:(l.result.reason&&console.warn(`Paymaster policy rejected this transaction with reason: ${l.result.reason} ${l.result.policyId?`(policyId: ${l.result.policyId})`:""}`),{callGasLimit:l.result.callGasLimit?(0,ac.uU)(l.result.callGasLimit):void 0,paymaster:l.result.paymaster,paymasterAndData:l.result.paymasterAndData,paymasterData:l.result.paymasterData,paymasterPostOpGasLimit:l.result.paymasterPostOpGasLimit?(0,ac.uU)(l.result.paymasterPostOpGasLimit):void 0,paymasterVerificationGasLimit:l.result.paymasterVerificationGasLimit?(0,ac.uU)(l.result.paymasterVerificationGasLimit):void 0,preVerificationGas:l.result.preVerificationGas?(0,ac.uU)(l.result.preVerificationGas):void 0,verificationGasLimit:l.result.verificationGasLimit?(0,ac.uU)(l.result.verificationGasLimit):void 0});let m=l.error?.message||l.error||k.statusText||"unknown error";throw Error(`Paymaster error from ${h}: ${m}`)}let al=new Set,am=a=>`${a.chain.id}:${a.address}`,an=a=>{al.add(am(a))},ao=a=>{al.delete(am(a))},ap=a=>al.has(am(a));async function aq(a){let b=a.timeoutMs||12e4,c=a.intervalMs||1e3,d=Date.now()+b;for(;Date.now()<d;){let b=await (0,N.JI)(a);if(b)return b;await new Promise(a=>setTimeout(a,c))}throw Error(`Timeout waiting for userOp to be mined on chain ${a.chain.id} with UserOp hash: ${a.userOpHash}`)}async function ar(a){let{transaction:b,accountContract:c,factoryContract:d,adminAddress:e,overrides:f,sponsorGas:g,waitForDeployment:h=!0,isDeployedOverride:i}=a,j=b.chain,k=b.client,l={bundlerUrl:f?.bundlerUrl,chain:j,client:k,entrypointAddress:f?.entrypointAddress},m=(0,P.Fn)(a.overrides?.entrypointAddress||P.uh),[n,o,p,q,s]=await Promise.all(["boolean"==typeof i?i:(0,r.isContractDeployed)(c).then(a=>a||ap(c)),(0,aa.encode)(b),(0,K.r)(b.gas),as({bundlerOptions:l,chain:j,client:k,executeTx:b}),ay({accountContract:c,chain:j,client:k,entrypointAddress:f?.entrypointAddress,getNonceOverride:f?.getAccountNonce})]),{maxFeePerGas:t,maxPriorityFeePerGas:u}=q;return"v0.7"===m?at({accountContract:c,adminAddress:e,bundlerOptions:l,callData:o,callGasLimit:p,factoryContract:d,isDeployed:n,maxFeePerGas:t,maxPriorityFeePerGas:u,nonce:s,overrides:f,sponsorGas:g,waitForDeployment:h}):au({accountContract:c,adminAddress:e,bundlerOptions:l,callData:o,callGasLimit:p,factoryContract:d,isDeployed:n,maxFeePerGas:t,maxPriorityFeePerGas:u,nonce:s,overrides:f,sponsorGas:g,waitForDeployment:h})}async function as(a){let{executeTx:b,bundlerOptions:c,chain:d,client:e}=a,{maxFeePerGas:f,maxPriorityFeePerGas:g}=b,h=c?.bundlerUrl??(0,P.RZ)(d);if((0,ae.isThirdwebUrl)(h)){let a=await (0,N.fB)({options:c});f=a.maxFeePerGas,g=a.maxPriorityFeePerGas}else{let[a,b]=await Promise.all([(0,K.r)(f),(0,K.r)(g)]);if(a&&b)f=a,g=b;else{let c=await (0,_.G)(e,d);g=b??c.maxPriorityFeePerGas??0n,f=a??c.maxFeePerGas??0n}}return{maxFeePerGas:f,maxPriorityFeePerGas:g}}async function at(a){let b,c,{bundlerOptions:d,isDeployed:e,factoryContract:f,accountContract:g,adminAddress:h,sponsorGas:i,overrides:j,nonce:k,callData:l,callGasLimit:m,maxFeePerGas:n,maxPriorityFeePerGas:o,waitForDeployment:p}=a,{chain:q,client:r}=d;e?(c="0x",p&&await az(g)):(b=f.address,c=await (0,aa.encode)((0,O.HM)({accountSalt:j?.accountSalt,adminAddress:h,createAccountOverride:j?.createAccount,factoryContract:f})),p&&an(g));let s={callData:l,callGasLimit:m??0n,factory:b,factoryData:c,maxFeePerGas:n,maxPriorityFeePerGas:o,nonce:k,paymaster:void 0,paymasterData:"0x",paymasterPostOpGasLimit:0n,paymasterVerificationGasLimit:0n,preVerificationGas:0n,sender:g.address,signature:P.km,verificationGasLimit:0n};if(i){let a=await ak({chain:q,client:r,entrypointAddress:j?.entrypointAddress,paymasterOverride:j?.paymaster,userOp:s});if(a.paymaster&&a.paymasterData&&(s.paymaster=a.paymaster,s.paymasterData=a.paymasterData),a.callGasLimit&&a.verificationGasLimit&&a.preVerificationGas&&a.paymasterPostOpGasLimit&&a.paymasterVerificationGasLimit)s.callGasLimit=a.callGasLimit,s.verificationGasLimit=a.verificationGasLimit,s.preVerificationGas=a.preVerificationGas,s.paymasterPostOpGasLimit=a.paymasterPostOpGasLimit,s.paymasterVerificationGasLimit=a.paymasterVerificationGasLimit;else{let a=j?.tokenPaymaster?{[j.tokenPaymaster.tokenAddress]:{stateDiff:{[(0,af.S)((0,ab.hd)([{type:"address"},{type:"uint256"}],[g.address,j.tokenPaymaster.balanceStorageSlot]))]:(0,ac.nj)(Q.EA,{size:32})}}}:void 0,b=await (0,N.yY)({options:d,userOp:s},a);s.callGasLimit=b.callGasLimit,s.verificationGasLimit=b.verificationGasLimit,s.preVerificationGas=b.preVerificationGas,s.paymasterPostOpGasLimit=j?.tokenPaymaster?500000n:b.paymasterPostOpGasLimit||0n,s.paymasterVerificationGasLimit=b.paymasterVerificationGasLimit||0n;let c=await ak({chain:q,client:r,entrypointAddress:j?.entrypointAddress,paymasterOverride:j?.paymaster,userOp:s});c.paymaster&&c.paymasterData&&(s.paymaster=c.paymaster,s.paymasterData=c.paymasterData)}}else{let a=await (0,N.yY)({options:d,userOp:s});s.callGasLimit=a.callGasLimit,s.verificationGasLimit=a.verificationGasLimit,s.preVerificationGas=a.preVerificationGas,s.paymasterPostOpGasLimit=a.paymasterPostOpGasLimit||0n,s.paymasterVerificationGasLimit=a.paymasterVerificationGasLimit||0n}return{...s,signature:"0x"}}async function au(a){let b,{bundlerOptions:c,isDeployed:d,factoryContract:e,accountContract:f,adminAddress:g,sponsorGas:h,overrides:i,nonce:j,callData:k,callGasLimit:l,maxFeePerGas:m,maxPriorityFeePerGas:n,waitForDeployment:o}=a,{chain:p,client:q}=c;d?(b="0x",o&&await az(f)):(b=await ax({accountSalt:i?.accountSalt,adminAddress:g,createAccountOverride:i?.createAccount,factoryContract:e}),o&&an(f));let r={callData:k,callGasLimit:l??0n,initCode:b,maxFeePerGas:m,maxPriorityFeePerGas:n,nonce:j,paymasterAndData:"0x",preVerificationGas:0n,sender:f.address,signature:P.km,verificationGasLimit:0n};if(h){let a=await ak({chain:p,client:q,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:r}),b="paymasterAndData"in a?a.paymasterAndData:"0x";if(b&&"0x"!==b&&(r.paymasterAndData=b),a.callGasLimit&&a.verificationGasLimit&&a.preVerificationGas)r.callGasLimit=a.callGasLimit,r.verificationGasLimit=a.verificationGasLimit,r.preVerificationGas=a.preVerificationGas;else{let a=await (0,N.yY)({options:c,userOp:r});if(r.callGasLimit=a.callGasLimit,r.verificationGasLimit=a.verificationGasLimit,r.preVerificationGas=a.preVerificationGas,b&&"0x"!==b){let a=await ak({chain:p,client:q,entrypointAddress:i?.entrypointAddress,paymasterOverride:i?.paymaster,userOp:r}),b="paymasterAndData"in a?a.paymasterAndData:"0x";b&&"0x"!==b&&(r.paymasterAndData=b)}}}else{let a=await (0,N.yY)({options:c,userOp:r});r.callGasLimit=a.callGasLimit,r.verificationGasLimit=a.verificationGasLimit,r.preVerificationGas=a.preVerificationGas}return{...r,signature:"0x"}}async function av(a){let{userOp:b,chain:c,entrypointAddress:d,adminAccount:e}=a,f=await aw({chain:c,client:a.client,entrypointAddress:d,userOp:b});if(e.signMessage){let a=await e.signMessage({chainId:c.id,message:{raw:(0,ad.aT)(f)},originalMessage:(0,ag.stringify)(b)});return{...b,signature:a}}throw Error("signMessage not implemented in signingAccount")}async function aw(a){let b,{userOp:c,chain:d,entrypointAddress:e}=a;if("v0.7"===(0,P.Fn)(e||P.uh)){let f={accountGasLimits:(0,R.xW)([(0,ah.eV)((0,ai.nj)(BigInt(c.verificationGasLimit)),{size:16}),(0,ah.eV)((0,ai.nj)(BigInt(c.callGasLimit)),{size:16})]),callData:c.callData,gasFees:(0,R.xW)([(0,ah.eV)((0,ai.nj)(BigInt(c.maxPriorityFeePerGas)),{size:16}),(0,ah.eV)((0,ai.nj)(BigInt(c.maxFeePerGas)),{size:16})]),initCode:c.factory?(0,R.xW)([c.factory,c.factoryData||"0x"]):"0x",nonce:BigInt(c.nonce),paymasterAndData:c.paymaster?(0,R.xW)([c.paymaster,(0,ah.eV)((0,ai.nj)(BigInt(c.paymasterVerificationGasLimit||0)),{size:16}),(0,ah.eV)((0,ai.nj)(BigInt(c.paymasterPostOpGasLimit||0)),{size:16}),c.paymasterData||"0x"]):"0x",preVerificationGas:BigInt(c.preVerificationGas),sender:c.sender,signature:c.signature};b=await $({contract:(0,g.P)({address:e||P.nF,chain:d,client:a.client}),userOp:f})}else b=await X({contract:(0,g.P)({address:e||P.uh,chain:d,client:a.client}),userOp:c});return b}async function ax(a){let{factoryContract:b,adminAddress:c,accountSalt:d,createAccountOverride:e}=a,f=(0,O.HM)({accountSalt:d,adminAddress:c,createAccountOverride:e,factoryContract:b});return(0,R.xW)([b.address,await (0,aa.encode)(f)])}async function ay(a){let{accountContract:b,chain:c,client:d,entrypointAddress:e,getNonceOverride:f}=a;return f?f(b):await U({contract:(0,g.P)({address:e||P.uh,chain:c,client:d}),key:(0,aj.t)(),sender:b.address})}async function az(a){let b=Date.now();for(;ap(a);){if(Date.now()-b>6e4)throw ao(a),Error("Account deployment is taking too long (over 1 minute). Please try again.");await new Promise(a=>setTimeout(a,500))}}let aA=new WeakMap,aB=new WeakMap;async function aC(a,b){let{personalAccount:c,client:d}=a;if(!c)throw Error("No personal account provided for smart account connection");let h=b.chain,i="gasless"in b?b.gasless:b.sponsorGas;if(await (0,J.k)(h))return[function(a){let{creationOptions:b,connectionOptions:c,chain:d}=a,g={address:(0,I.bv)(c.personalAccount.address),onTransactionRequested:async a=>c.personalAccount.onTransactionRequested?.(a),async sendTransaction(h){let i={chain:(0,f.Q4)(h.chainId),client:c.client,data:h.data,eip712:h.eip712,to:h.to??void 0,value:h.value??0n},j=await (0,H.f)({account:g,transaction:i});if(a.sponsorGas&&!j.paymaster){let a=await (0,N.qq)({options:{bundlerUrl:b.overrides?.bundlerUrl,chain:d,client:c.client,entrypointAddress:b.overrides?.entrypointAddress},transaction:j});j={...j,...a}}let k=await (0,H.a)({account:g,chainId:d.id,eip712Transaction:j}),l=await (0,N.vx)({options:{bundlerUrl:b.overrides?.bundlerUrl,chain:d,client:c.client,entrypointAddress:b.overrides?.entrypointAddress},signedTransaction:k,transaction:j});return(0,e.E)({chainId:d.id,client:c.client,contractAddress:h.to??void 0,transactionHash:l.transactionHash,walletAddress:g.address,walletType:"smart"}),{chain:d,client:c.client,transactionHash:l.transactionHash}},signMessage:async({message:a})=>c.personalAccount.signMessage({message:a}),async signTypedData(a){let b=(0,L.y)(a);return c.personalAccount.signTypedData(b)}};return g}({chain:h,connectionOptions:a,creationOptions:b,sponsorGas:i}),h];if(b.factoryAddress&&!b.overrides?.entrypointAddress){let a=await aH(b.factoryAddress,d,h);a&&(b.overrides={...b.overrides,entrypointAddress:a})}b.overrides?.tokenPaymaster&&!b.overrides?.entrypointAddress&&(b.overrides={...b.overrides,entrypointAddress:P.nF});let j=b.factoryAddress??(0,P.Fd)(b.overrides?.entrypointAddress),k=(0,g.P)({address:j,chain:h,client:d}),l=await (0,O.Mi)({accountAddress:b.overrides?.accountAddress,accountSalt:b.overrides?.accountSalt,adminAddress:c.address,factoryContract:k,predictAddressOverride:b.overrides?.predictAddress}).then(a=>a).catch(a=>{throw Error(`Failed to get account address with factory contract ${k.address} on chain ID ${h.id}: ${a?.message||"unknown error"}`,{cause:a})}),o=(0,g.P)({address:l,chain:h,client:d}),p=await aE({...b,accountContract:o,chain:h,client:d,factoryContract:k,personalAccount:c,sponsorGas:i});if(aA.set(c,p),aB.set(p,c),b.sessionKey&&await E({accountContract:o,newPermissions:b.sessionKey.permissions,sessionKeyAddress:b.sessionKey.address})){let a=function(a){let{contract:b,sessionKeyAddress:c,account:d,permissions:e}=a;var f={async asyncParams(){let{req:a,signature:f}=await C({account:d,contract:b,req:await D({permissions:e,target:c})});return{req:a,signature:f}},contract:b};let g=(0,n.O)(async()=>"asyncParams"in f?await f.asyncParams():f);return(0,m.m)({accessList:async()=>(await g()).overrides?.accessList,authorizationList:async()=>(await g()).overrides?.authorizationList,contract:f.contract,erc20Value:async()=>(await g()).overrides?.erc20Value,extraGas:async()=>(await g()).overrides?.extraGas,gas:async()=>(await g()).overrides?.gas,gasPrice:async()=>(await g()).overrides?.gasPrice,maxFeePerGas:async()=>(await g()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await g()).overrides?.maxPriorityFeePerGas,method:["0x5892e236",v,w],nonce:async()=>(await g()).overrides?.nonce,params:async()=>{let a=await g();return[a.req,a.signature]},value:async()=>(await g()).overrides?.value})}({account:c,contract:o,permissions:b.sessionKey.permissions,sessionKeyAddress:b.sessionKey.address});await (0,F.sendTransaction)({account:p,transaction:a})}return[p,h]}async function aD(a){let b=aB.get(a);b&&(aA.delete(b),aB.delete(a))}async function aE(a){let b=a.overrides?.tokenPaymaster;if(b&&"v0.7"!==(0,P.Fn)(a.overrides?.entrypointAddress||P.uh))throw Error("Token paymaster is only supported for entrypoint version v0.7");let d=a.accountContract,h={address:(0,I.bv)(d.address),onTransactionRequested:async b=>a.personalAccount.onTransactionRequested?.(b),async sendBatchTransaction(b){let c=(0,O.zi)({accountContract:d,executeBatchOverride:a.overrides?.executeBatch,transactions:b});if(0===b.length)throw Error("No transactions to send");let g=b[0];if(!g)throw Error("No transactions to send");let h=(0,f.Q4)(g.chainId),i=await aG({executeTx:c,options:{...a,accountContract:d,chain:h}});return(0,e.E)({chainId:h.id,client:a.client,contractAddress:b[0]?.to??void 0,transactionHash:i.transactionHash,walletAddress:a.accountContract.address,walletType:"smart"}),i},async sendTransaction(c){let i;if(b){await aF({accountContract:d,erc20Paymaster:b,options:a});let c=async()=>({paymaster:b.paymasterAddress,paymasterData:"0x"});i=a.overrides?.paymaster||c}else i=a.overrides?.paymaster;c.chainId!==d.chain.id&&(d=(0,g.P)({address:h.address,chain:(0,f.Q4)(c.chainId),client:a.client}));let j=(0,O.Lc)({accountContract:d,executeOverride:a.overrides?.execute,transaction:c}),k=(0,f.Q4)(c.chainId),l=await aG({executeTx:j,options:{...a,accountContract:d,chain:k,overrides:{...a.overrides,paymaster:i}}});return(0,e.E)({chainId:k.id,client:a.client,contractAddress:c.to??void 0,transactionHash:l.transactionHash,walletAddress:a.accountContract.address,walletType:"smart"}),l},async signMessage({message:b}){if(a.overrides?.signMessage)return a.overrides.signMessage({accountContract:d,adminAccount:a.personalAccount,factoryContract:a.factoryContract,message:b});let{smartAccountSignMessage:e}=await c.e(85213).then(c.bind(c,85213));return e({accountContract:d,factoryContract:a.factoryContract,message:b,options:a})},async signTypedData(b){if(a.overrides?.signTypedData)return a.overrides.signTypedData({accountContract:d,adminAccount:a.personalAccount,factoryContract:a.factoryContract,typedData:b});let{smartAccountSignTypedData:e}=await c.e(85213).then(c.bind(c,85213));return e({accountContract:d,factoryContract:a.factoryContract,options:a,typedData:b})}};return h}async function aF(a){let{accountContract:b,erc20Paymaster:d,options:e}=a,f=d.tokenAddress,h=(0,g.P)({address:f,chain:b.chain,client:b.client});if(await k({contract:h,owner:b.address,spender:d.paymasterAddress})>0n)return;let i=function(a){var b={asyncParams:async()=>{let b;if("amount"in a){let{decimals:d}=await c.e(38677).then(c.bind(c,38677)),e=await d(a).catch(()=>18);b=(0,l.J1)(a.amount.toString(),e)}else b=a.amountWei;return{overrides:{erc20Value:{amountWei:b,tokenAddress:a.contract.address}},spender:a.spender,value:b}},contract:a.contract};let d=(0,n.O)(async()=>"asyncParams"in b?await b.asyncParams():b);return(0,m.m)({accessList:async()=>(await d()).overrides?.accessList,authorizationList:async()=>(await d()).overrides?.authorizationList,contract:b.contract,erc20Value:async()=>(await d()).overrides?.erc20Value,extraGas:async()=>(await d()).overrides?.extraGas,gas:async()=>(await d()).overrides?.gas,gasPrice:async()=>(await d()).overrides?.gasPrice,maxFeePerGas:async()=>(await d()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await d()).overrides?.maxPriorityFeePerGas,method:["0x095ea7b3",o,p],nonce:async()=>(await d()).overrides?.nonce,params:async()=>{let a=await d();return[a.spender,a.value]},value:async()=>(await d()).overrides?.value})}({amountWei:M-1n,contract:h,spender:d.paymasterAddress}),j=await (0,G.$)({from:b.address,transaction:i}),q=(0,O.Lc)({accountContract:b,executeOverride:e.overrides?.execute,transaction:j});await aG({executeTx:q,options:{...e,overrides:{...e.overrides,tokenPaymaster:void 0}}})}async function aG(a){let{executeTx:b,options:c}=a;try{let a=await ar({accountContract:c.accountContract,adminAddress:c.personalAccount.address,factoryContract:c.factoryContract,overrides:c.overrides,sponsorGas:c.sponsorGas,transaction:b}),d=await av({adminAccount:c.personalAccount,chain:c.chain,client:c.client,entrypointAddress:c.overrides?.entrypointAddress,userOp:a}),f={bundlerUrl:c.overrides?.bundlerUrl,chain:c.chain,client:c.client,entrypointAddress:c.overrides?.entrypointAddress},g=await (0,N.Ro)({options:f,userOp:d}),h=await aq({...f,userOpHash:g});return(0,e.E)({chainId:c.chain.id,client:c.client,contractAddress:await (0,K.r)(b.to??void 0),transactionHash:h.transactionHash,walletAddress:c.accountContract.address,walletType:"smart"}),{chain:c.chain,client:c.client,transactionHash:h.transactionHash}}catch(a){throw(0,d.Y)(a)&&(0,e.z)({chainId:c.chain.id,client:c.client,contractAddress:await (0,K.r)(b.to??void 0),error:a,transactionValue:await (0,K.r)(b.value),walletAddress:c.accountContract.address}),a}finally{ao(c.accountContract)}}async function aH(a,b,c){let d=(0,g.P)({address:a,chain:c,client:b});try{return await (0,h.readContract)({contract:d,method:"function entrypoint() public view returns (address)"})}catch{return}}},49976:(a,b,c)=>{c.d(b,{DG:()=>d,cF:()=>f,dw:()=>e});let d="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";function e(a){return a.toLowerCase()===d}let f="0x0000000000000000000000000000000000000000"},59654:(a,b,c)=>{c.d(b,{readContract:()=>m});var d=c(23018),e=c(80200),f=c(43533);async function g(a,b){let{blockNumber:c,blockTag:d,...e}=b,g=(c?(0,f.cK)(c):void 0)||d||"latest";return await a({method:"eth_call",params:b.stateOverrides?[e,g,Object.fromEntries(Object.entries(b.stateOverrides).map(([a,b])=>[a,{balance:b.balance?(0,f.cK)(b.balance):void 0,code:b.code,nonce:b.nonce?(0,f.cK)(b.nonce):void 0,state:b.state,stateDiff:b.stateDiff}]))]:[e,g]})}var h=c(14442),i=c(28425),j=c(66010),k=c(77184),l=c(58884);async function m(a){let b,{contract:c,method:f,params:m}=a,n=async()=>{if(Array.isArray(f))return f;if((0,l.d)(f))return(0,j.v)(f);if("function"==typeof f)return(0,j.v)(await f(c));if("string"==typeof f&&f.startsWith("function ")){let a=(0,d.$)(f);if("function"===a.type)return(0,j.v)(a);throw Error('"method" passed is not of type "function"')}if(c.abi&&c.abi?.length>0){let a=c.abi?.find(a=>"function"===a.type&&a.name===f);if(a)return(0,j.v)(a)}throw Error(`Could not resolve method "${f}".`)},[o,p]=await Promise.all([n(),"function"==typeof m?m():m]);b=0===o[1].length?o[0]:o[0]+(0,i.hd)(o[1],p).slice(2);let q=(0,h.getRpcClient)({chain:c.chain,client:c.client}),r=await g(q,{data:b,from:a.from?(0,k.bv)(a.from):void 0,to:c.address}),s=(0,e.n)(o[2],r);return Array.isArray(s)&&1===s.length?s[0]:s}},95784:(a,b,c)=>{c.d(b,{HM:()=>j,Lc:()=>k,Mi:()=>i,zi:()=>l});var d=c(186),e=c(59654),f=c(81768),g=c(43533),h=c(39184);async function i(a){let{factoryContract:b,predictAddressOverride:c,adminAddress:d,accountSalt:i,accountAddress:j}=a;if(c)return c(b,d);if(j)return j;if(!d)throw Error("Account address is required to predict the smart wallet address.");return(0,h.n)(async()=>{let a,c=i&&(0,f.q)(i)?i:(0,g.i3)(i??""),h=0;for(;h<=3;)try{a=await (0,e.readContract)({contract:b,method:"function getAddress(address, bytes) returns (address)",params:[d,c]});break}catch(b){if(3===h)throw b;let a=2**(h+1)*200;await new Promise(b=>setTimeout(b,a)),h++}if(!a)throw Error(`No smart account address found for admin address ${d} and salt ${i}`);return a},{cacheKey:`${a.factoryContract.chain.id}-${a.factoryContract.address}-${a.adminAddress}-${a.accountSalt}`,cacheTime:864e5})}function j(a){let{adminAddress:b,factoryContract:c,createAccountOverride:e,accountSalt:h}=a;if(e)return e(c,b);let i=h&&(0,f.q)(h)?h:(0,g.i3)(h??"");return(0,d.m)({contract:c,method:"function createAccount(address, bytes) returns (address)",params:[b,i]})}function k(a){let{accountContract:b,transaction:c,executeOverride:e}=a;if(e)return e(b,c);let f=c.value||0n;return(295===c.chainId||296===c.chainId)&&(f=BigInt(f)/BigInt(1e10)),(0,d.m)({contract:b,gas:c.gas?c.gas+21000n:void 0,method:"function execute(address, uint256, bytes)",params:[c.to||"",f,c.data||"0x"]})}function l(a){let{accountContract:b,transactions:c,executeBatchOverride:e}=a;if(e)return e(b,c);let f=c.map(a=>a.value||0n),g=c[0]?.chainId;return(295===g||296===g)&&(f=f.map(a=>BigInt(a)/BigInt(1e10))),(0,d.m)({contract:b,method:"function executeBatch(address[], uint256[], bytes[])",params:[c.map(a=>a.to||""),f,c.map(a=>a.data||"0x")]})}},97171:(a,b,c)=>{c.r(b),c.d(b,{sendTransaction:()=>f});var d=c(19592),e=c(13623);async function f(a){let{account:b,transaction:f,gasless:g}=a;if(b.onTransactionRequested&&await b.onTransactionRequested(f),f.eip712){let{sendEip712Transaction:a}=await c.e(82601).then(c.bind(c,82601));return a({account:b,transaction:f})}let h=await (0,e.$)({from:b,transaction:f});if(g){let{sendGaslessTransaction:a}=await c.e(91694).then(c.bind(c,91694));return a({account:b,gasless:g,serializableTransaction:h,transaction:f})}let i=await b.sendTransaction(h);return(0,d.Kj)({address:b.address,chainId:f.chain.id,transactionHash:i.transactionHash}),{...i,chain:f.chain,client:f.client}}}};