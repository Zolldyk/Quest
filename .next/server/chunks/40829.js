"use strict";exports.id=40829,exports.ids=[24856,40829],exports.modules={21760:(a,b,c)=>{c.d(b,{B:()=>d});async function d(a,b){return await a({method:"eth_sendRawTransaction",params:[b]})}},24856:(a,b,c)=>{c.r(b),c.d(b,{signLoginPayload:()=>d});async function d(a){let{payload:b,account:c}=a,d=await c.signMessage({message:function(a){let b=[`${a.domain} wants you to sign in with your Ethereum account:`,a.address].join("\n");b=[b,a.statement].join("\n\n"),a.statement&&(b+="\n");let c=[];if(a.uri){let b=`URI: ${a.uri}`;c.push(b)}let d=`Version: ${a.version}`;if(c.push(d),a.chain_id){let b=`Chain ID: ${a.chain_id}`||"1";c.push(b)}let e=`Nonce: ${a.nonce}`;c.push(e);let f=`Issued At: ${a.issued_at}`;c.push(f);let g=`Expiration Time: ${a.expiration_time}`;if(c.push(g),a.invalid_before){let b=`Not Before: ${a.invalid_before}`;c.push(b)}return a.resources&&c.push(["Resources:",...a.resources.map(a=>`- ${a}`)].join("\n")),[b,c.join("\n")].join("\n")}(b)});return{payload:b,signature:d}}},40829:(a,b,c)=>{c.d(b,{InAppWebConnector:()=>ai});var d=c(20985);let e=new Map,f={getItem:async a=>e.get(a)??null,removeItem:async a=>{e.delete(a)},setItem:async(a,b)=>{e.set(a,b)}};var g=c(37611),h=c(86073);async function i({authToken:a,client:b,ecosystem:c}){let e=(0,h.getClientFetch)(b,c),f=await e(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/accounts`,{headers:{Authorization:`Bearer embedded-wallet-token:${a}`,"Content-Type":"application/json"},method:"GET"});if(!f.ok){let a=await f.text().catch(()=>"Unknown error");throw Error(`Failed to get user info: ${a}`)}return await f.json()}var j=c(21984);let k=(0,d.getThirdwebBaseUrl)("inAppWallet"),l=`${k}/`,m=`${l}api/2023-10-20`,n=`${m}/embedded-wallet/validate-custom-jwt`,o=`${m}/embedded-wallet/validate-custom-auth-endpoint`,p=(a,b)=>b instanceof Error?`${a}: ${b.message}`:`${a}: ${(0,j.stringify)(b)}`;async function q(a){let b=(0,h.getClientFetch)(a.client,a.ecosystem),c=await b(o,{body:(0,j.stringify)({developerClientId:a.client.clientId,payload:a.payload}),headers:{"Content-Type":"application/json"},method:"POST"});if(!c.ok){let a=await c.json();throw Error(`Custom auth endpoint authentication error: ${a.message}`)}try{let{verifiedToken:a}=await c.json();return{storedToken:a}}catch(a){throw Error(p("Malformed response from post auth_endpoint authentication",a))}}var r=c(37146);async function s(a){let b=(0,h.getClientFetch)(a.client,a.ecosystem),c=(0,r.f)({authOption:"backend",client:a.client,ecosystem:a.ecosystem}),d=await b(`${c}`,{body:(0,j.stringify)({walletSecret:a.walletSecret}),headers:{"Content-Type":"application/json"},method:"POST"});if(!d.ok){let a=await d.text();throw Error(`Failed to generate backend account: ${a}`)}return await d.json()}var t=c(57428),u=c(73501);async function v(a){let b=await a.storage.getGuestSessionId();b||(b=(0,u.O)(32),a.storage.saveGuestSessionId(b));let c=(0,h.getClientFetch)(a.client,a.ecosystem),d=(0,r.K)({authOption:"guest",client:a.client,ecosystem:a.ecosystem}),e=await c(`${d}`,{body:(0,j.stringify)({sessionId:b}),headers:{"Content-Type":"application/json"},method:"POST"});if(!e.ok){let a=await e.text();throw Error(`Failed to generate guest account: ${e.status} ${e.statusText} ${a}`)}return await e.json()}async function w(a){let b=(0,h.getClientFetch)(a.client,a.ecosystem),c=await b(n,{body:(0,j.stringify)({developerClientId:a.client.clientId,jwt:a.jwt}),headers:{"Content-Type":"application/json"},method:"POST"});if(!c.ok){let a=await c.json();throw Error(`JWT authentication error: ${a.message}`)}try{let{verifiedToken:a}=await c.json();return{storedToken:a}}catch(a){throw Error(p("Malformed response from post jwt authentication",a))}}async function x({client:a,ecosystem:b,tokenToLink:c,storage:e}){let f=(0,h.getClientFetch)(a,b),g=(0,d.getThirdwebBaseUrl)("inAppWallet"),i=await e.getAuthCookie();if(!i)throw Error("Failed to link account, no user logged in");let k={Authorization:`Bearer iaw-auth-token:${i}`,"Content-Type":"application/json"},l=await f(`${g}/api/2024-05-05/account/connect`,{body:(0,j.stringify)({accountAuthTokenToConnect:c}),headers:k,method:"POST"});if(!l.ok)throw Error((await l.json()).message||"Failed to link account.");let{linkedAccounts:m}=await l.json();return m??[]}async function y({client:a,ecosystem:b,profileToUnlink:c,allowAccountDeletion:e=!1,storage:f}){let g=(0,h.getClientFetch)(a,b),i=(0,d.getThirdwebBaseUrl)("inAppWallet"),k=await f.getAuthCookie();if(!k)throw Error("Failed to unlink account, no user logged in");let l={Authorization:`Bearer iaw-auth-token:${k}`,"Content-Type":"application/json"},m=await g(`${i}/api/2024-05-05/account/disconnect`,{body:(0,j.stringify)({allowAccountDeletion:e,details:c.details,type:c.type}),headers:l,method:"POST"});if(!m.ok)throw Error((await m.json()).message||"Failed to unlink account.");let{linkedAccounts:n}=await m.json();return n??[]}async function z({client:a,ecosystem:b,storage:c}){let e=(0,h.getClientFetch)(a,b),f=(0,d.getThirdwebBaseUrl)("inAppWallet"),g=await c.getAuthCookie();if(!g)throw Error("Failed to get linked accounts, no user logged in");let i={Authorization:`Bearer iaw-auth-token:${g}`,"Content-Type":"application/json"},j=await e(`${f}/api/2024-05-05/accounts`,{headers:i,method:"GET"});if(!j.ok)throw Error((await j.json()).message||"Failed to get linked accounts.");let{linkedAccounts:k}=await j.json();return k??[]}function A(){return`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function B(a,b){return`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/2024-05-05/login/passkey?type=${a}${b?`&username=${b}`:""}`}async function C(a){var b;if(!a.passkeyClient.isAvailable())throw Error("Passkeys are not available on this device");let c=(0,h.getClientFetch)(a.client,a.ecosystem),d=a.username??(b=a.ecosystem,`${b?.id??"wallet"}-${new Date().toISOString()}`),e=await c(B("sign-up",d)),f=await e.json();if(!f.challenge)throw Error("No challenge received");let g=f.challenge,i=await a.passkeyClient.register({challenge:g,name:d,rp:a.rp}),k={};a.ecosystem?.partnerId&&(k["x-ecosystem-partner-id"]=a.ecosystem.partnerId),a.ecosystem?.id&&(k["x-ecosystem-id"]=a.ecosystem.id);let l=await c(A(),{body:(0,j.stringify)({authenticatorData:i.authenticatorData,clientData:i.clientData,credential:{algorithm:i.credential.algorithm,publicKey:i.credential.publicKey},credentialId:i.credentialId,origin:i.origin,rpId:a.rp.id,serverVerificationId:f.serverVerificationId,type:"sign-up",username:d}),headers:{"Content-Type":"application/json",...k},method:"POST"}),m=await l.json();if(!m||!m.storedToken)throw Error(`Error verifying passkey: ${m.message??"unknown error"}`);return await a.storage?.savePasskeyCredentialId(i.credentialId),m}async function D(a){if(!a.passkeyClient.isAvailable())throw Error("Passkeys are not available on this device");let b=(0,h.getClientFetch)(a.client,a.ecosystem),[c,d]=await Promise.all([b(B("sign-in")).then(a=>a.json()),a.storage?.getPasskeyCredentialId()]);if(!c.challenge)throw Error("No challenge received");let e=c.challenge,f=await a.passkeyClient.authenticate({challenge:e,credentialId:d??void 0,rp:a.rp}),g={};a.ecosystem?.partnerId&&(g["x-ecosystem-partner-id"]=a.ecosystem.partnerId),a.ecosystem?.id&&(g["x-ecosystem-id"]=a.ecosystem.id);let i=await b(A(),{body:(0,j.stringify)({authenticatorData:f.authenticatorData,clientData:f.clientData,credentialId:f.credentialId,origin:f.origin,rpId:a.rp.id,serverVerificationId:c.serverVerificationId,signature:f.signature,type:"sign-in"}),headers:{"Content-Type":"application/json",...g},method:"POST"}),k=await i.json();if(!k||!k.storedToken)throw Error(`Error verifying passkey: ${k.message??"unknown error"}`);return await a.storage?.savePasskeyCredentialId(f.credentialId),k}var E=c(24856);async function F(a){let{wallet:b,chain:c,client:d,ecosystem:e}=a,f=b.getAccount()||await b.connect({chain:c,client:d}),g=(0,h.getClientFetch)(d,e),i=await (async()=>{let b=(0,r.f)({authOption:"wallet",client:a.client,ecosystem:a.ecosystem}),d=await g(`${b}&address=${f.address}&chainId=${c.id}`);if(!d.ok)throw Error("Failed to generate SIWE login payload");return await d.json()})(),{signature:k}=await (0,E.signLoginPayload)({account:f,payload:i});return await (async()=>{let b=(0,r.K)({authOption:"wallet",client:a.client,ecosystem:a.ecosystem}),c=await g(`${b}&signature=${k}&payload=${encodeURIComponent(i)}`,{body:(0,j.stringify)({payload:i,signature:k}),headers:{"Content-Type":"application/json"},method:"POST"});if(!c.ok)throw Error("Failed to verify SIWE signature");return await c.json()})()}var G=c(6981),H=c(66997),I=c(64656),J=c(21760),K=c(14442),L=c(77184),M=c(43533),N=c(81768),O=c(21267);async function P({client:a,payload:b,storage:c}){let e=await c.getAuthCookie(),f=c.ecosystem,g=(0,h.getClientFetch)(a,f);if(!e)throw Error("No auth token found when signing message");let i={address:b.address,chainId:b.chainId,nonce:Number(b.nonce)},k=await g(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-authorization`,{body:(0,j.stringify)(i),headers:{Authorization:`Bearer embedded-wallet-token:${e}`,"Content-Type":"application/json","x-thirdweb-client-id":a.clientId},method:"POST"});if(!k.ok)throw Error(`Failed to sign message - ${k.status} ${k.statusText}`);return await k.json()}async function Q({client:a,payload:{message:b,isRaw:c,originalMessage:e,chainId:f},storage:g}){let i=await g.getAuthCookie(),k=g.ecosystem,l=(0,h.getClientFetch)(a,k);if(!i)throw Error("No auth token found when signing message");let m=await l(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{body:(0,j.stringify)({messagePayload:{chainId:f,isRaw:c,message:b,originalMessage:e}}),headers:{Authorization:`Bearer embedded-wallet-token:${i}`,"Content-Type":"application/json","x-thirdweb-client-id":a.clientId},method:"POST"});if(!m.ok)throw Error(`Failed to sign message - ${m.status} ${m.statusText}`);return await m.json()}async function R({client:a,payload:b,storage:c}){let e=await c.getAuthCookie(),f=c.ecosystem,g=(0,h.getClientFetch)(a,f);if(!e)throw Error("No auth token found when signing transaction");let i=await g(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{body:(0,j.stringify)({transactionPayload:b}),headers:{Authorization:`Bearer embedded-wallet-token:${e}`,"Content-Type":"application/json","x-thirdweb-client-id":a.clientId},method:"POST"});if(!i.ok)throw Error(`Failed to sign transaction - ${i.status} ${i.statusText}`);return(await i.json()).signature}async function S({client:a,payload:b,storage:c}){let e=await c.getAuthCookie(),f=c.ecosystem,g=(0,h.getClientFetch)(a,f);if(!e)throw Error("No auth token found when signing typed data");let i=await g(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{body:(0,j.stringify)({...b}),headers:{Authorization:`Bearer embedded-wallet-token:${e}`,"Content-Type":"application/json","x-thirdweb-client-id":a.clientId},method:"POST"});if(!i.ok)throw Error(`Failed to sign typed data - ${i.status} ${i.statusText}`);return await i.json()}class T{constructor({client:a,ecosystem:b,address:c,storage:d}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=a,this.ecosystem=b,this.address=c,this.localStorage=d}async postWalletSetUp(a){await this.localStorage.saveAuthCookie(a.storedToken.cookieString)}async getUserWalletStatus(){let a=await this.localStorage.getAuthCookie();if(!a)return{status:"Logged Out"};let b=await i({authToken:a,client:this.client,ecosystem:this.ecosystem});if(!b)return{status:"Logged Out"};let c=b.wallets[0],d={email:b.linkedAccounts.find(a=>void 0!==a.details.email)?.details.email,phoneNumber:b.linkedAccounts.find(a=>void 0!==a.details.phone)?.details.phone,recoveryShareManagement:"ENCLAVE",userWalletId:b.id||""};return c?{account:await this.getAccount(),authDetails:d,status:"Logged In, Wallet Initialized",walletAddress:c.address}:{authDetails:d,status:"Logged In, Wallet Uninitialized"}}async getAccount(){let a=this.client,b=this.localStorage,d=this.address,e=this.ecosystem,f=async d=>{let e=(0,K.getRpcClient)({chain:(0,I.Q4)(d.chainId),client:a}),f={chainId:(0,M.nj)(d.chainId),data:d.data,gas:U(d.gas),nonce:U(d.nonce)||(0,M.nj)(await c.e(97369).then(c.bind(c,97369)).then(({eth_getTransactionCount:a})=>a(e,{address:(0,L.bv)(this.address),blockTag:"pending"}))),to:d.to?(0,L.bv)(d.to):void 0,value:U(d.value)};return d.authorizationList&&d.authorizationList.length>0?(f.type=4,f.authorizationList=d.authorizationList,f.maxFeePerGas=U(d.maxFeePerGas),f.maxPriorityFeePerGas=U(d.maxPriorityFeePerGas)):U(d.maxFeePerGas)?(f.maxFeePerGas=U(d.maxFeePerGas),f.maxPriorityFeePerGas=U(d.maxPriorityFeePerGas),f.type=2):(f.gasPrice=U(d.gasPrice),f.type=0),R({client:a,payload:f,storage:b})};return{address:(0,L.bv)(d),async sendTransaction(b){let c=(0,K.getRpcClient)({chain:(0,I.Q4)(b.chainId),client:a}),g=await f(b),h=await (0,J.B)(c,g);return(0,H.E)({chainId:b.chainId,client:a,contractAddress:b.to??void 0,ecosystem:e,gasPrice:b.gasPrice,transactionHash:h,walletAddress:d,walletType:"inApp"}),{transactionHash:h}},async signAuthorization(c){let d=await P({client:a,payload:c,storage:b});return{address:(0,L.bv)(d.address),chainId:Number.parseInt(d.chainId),nonce:BigInt(d.nonce),r:BigInt(d.r),s:BigInt(d.s),yParity:Number.parseInt(d.yParity)}},async signMessage({message:c,originalMessage:d,chainId:e}){let f="string"==typeof c?{chainId:e,isRaw:!1,message:c,originalMessage:d}:{chainId:e,isRaw:!0,message:"string"==typeof c.raw?c.raw:(0,G.My)(c.raw),originalMessage:d},{signature:g}=await Q({client:a,payload:f,storage:b});return g},async signTransaction(a){if(!a.chainId)throw Error("chainId required in tx to sign");return f({chainId:a.chainId,...a})},async signTypedData(c){let d=(0,O.y)(c),{signature:e}=await S({client:a,payload:d,storage:b});return e}}}}function U(a){return void 0===a||(0,N.q)(a)?a:(0,M.nj)(a)}var V=c(57874),W=c(2283);let X={backgroundColor:"transparent",border:"none",colorScheme:"light",display:"none",height:"100%",pointerEvents:"all",position:"fixed",right:"0px",top:"0px",width:"100%",zIndex:"2147483646"},Y=new Map;class Z{constructor({link:a,baseUrl:b,iframeId:c,container:d,onIframeInitialize:e,localStorage:f,clientId:g,ecosystem:h}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=f,this.clientId=g,this.ecosystem=h,this.iframeBaseUrl=b,"undefined"==typeof document)return;d=d??document.body;let i=document.getElementById(c),j=new URL(a);if(!i||i.src!==j.href){i=document.createElement("iframe");let a={...X};Object.assign(i.style,a),i.setAttribute("id",c),i.setAttribute("fetchpriority","high"),d.appendChild(i),i.src=j.href;let b=a=>{if("ewsIframeLoaded"===a.data.eventType){if(window.removeEventListener("message",b),!i)return void console.warn("thirdweb iFrame not found");this.onIframeLoadHandler(i,e)()}};window.addEventListener("message",b)}this.iframe=i}async onIframeLoadedInitVariables(){return{authCookie:await this.localStorage.getAuthCookie(),clientId:this.clientId,deviceShareStored:await this.localStorage.getDeviceShare(),ecosystemId:this.ecosystem?.id,partnerId:this.ecosystem?.partnerId,walletUserId:await this.localStorage.getWalletUserId()}}onIframeLoadHandler(a,b){return async()=>{let c=new MessageChannel,d=new Promise((d,e)=>{c.port1.onmessage=f=>{let{data:g}=f;c.port1.close(),g.success||e(Error(g.error)),Y.set(a.src,!0),b&&b(),d(!0)}});a?.contentWindow?.postMessage({data:await this.onIframeLoadedInitVariables(),eventType:"initIframe"},this.iframeBaseUrl,[c.port2]),await d}}async call({procedureName:a,params:b,showIframe:c=!1}){if(!this.iframe)throw Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!Y.get(this.iframe.src);)await (0,W.y)(1e3*this.POLLING_INTERVAL_SECONDS);c&&(this.iframe.style.display="block",await (0,W.y)(5));let d=new MessageChannel,e=new Promise((a,b)=>{d.port1.onmessage=async e=>{let{data:f}=e;d.port1.close(),c&&(await (0,W.y)(100),this.iframe&&(this.iframe.style.display="none")),f.success?a(f.data):b(Error(f.error))}});return this.iframe.contentWindow?.postMessage({data:{...b,...await this.onIframeLoadedInitVariables()},eventType:a},this.iframeBaseUrl,[d.port2]),e}destroy(){this.iframe&&Y.delete(this.iframe.src)}}class $ extends Z{constructor({clientId:a,baseUrl:b,ecosystem:c}){super({baseUrl:b,clientId:a,container:"undefined"==typeof document?void 0:document.body,ecosystem:c,iframeId:_+(c?.id||""),link:function({clientId:a,baseUrl:b,path:c,ecosystem:d,queryParams:e}){let f=new URL(`${c}`,b);if(e)for(let a of Object.keys(e))f.searchParams.set(a,e[a]?.toString()||"");return f.searchParams.set("clientId",a),d?.partnerId!==void 0&&f.searchParams.set("partnerId",d.partnerId),d?.id!==void 0&&f.searchParams.set("ecosystemId",d.id),f}({baseUrl:b,clientId:a,ecosystem:c,path:V.CW}).href,localStorage:new t.t({clientId:a,ecosystem:c,storage:g.n})}),this.clientId=a,this.ecosystem=c}}let _="thirdweb-in-app-wallet-iframe";async function aa({client:a,ecosystem:b,authToken:c}){let e=(0,h.getClientFetch)(a,b),f=await e(`${(0,d.getThirdwebBaseUrl)("inAppWallet")}/api/v1/enclave-wallet/generate`,{headers:{Authorization:`Bearer embedded-wallet-token:${c}`,"Content-Type":"application/json","x-thirdweb-client-id":a.clientId},method:"POST"});if(!f.ok)throw Error(`Failed to generate wallet - ${f.status} ${f.statusText}`);let{wallet:g}=await f.json();return g}class ab{constructor({baseUrl:a,querier:b,preLogin:c,postLogin:d,client:e,ecosystem:f}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=a,this.LoginQuerier=b,this.preLogin=c,this.postLogin=d,this.client=e,this.ecosystem=f}async sendEmailLoginOtp({email:a}){return await this.LoginQuerier.call({params:{email:a},procedureName:"sendThirdwebEmailLoginOtp"})}async sendSmsLoginOtp({phoneNumber:a}){return await this.LoginQuerier.call({params:{phoneNumber:a},procedureName:"sendThirdwebSmsLoginOtp"})}}class ac extends ab{async authenticateWithModal(){return this.LoginQuerier.call({params:void 0,procedureName:"loginWithThirdwebModal",showIframe:!0})}async loginWithModal(){await this.preLogin();let a=await this.authenticateWithModal();return this.postLogin(a)}async authenticateWithIframe({email:a}){return this.LoginQuerier.call({params:{email:a},procedureName:"loginWithThirdwebModal",showIframe:!0})}async loginWithIframe({email:a}){await this.preLogin();let b=await this.authenticateWithIframe({email:a});return this.postLogin(b)}async authenticateWithCustomJwt({encryptionKey:a,jwt:b}){if(!a||0===a.length)throw Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({params:{encryptionKey:a,jwt:b},procedureName:"loginWithCustomJwt"})}async loginWithCustomJwt({encryptionKey:a,jwt:b}){if(!a||0===a.length)throw Error("Encryption key is required for custom jwt auth");await this.preLogin();let c=await this.authenticateWithCustomJwt({encryptionKey:a,jwt:b});return this.postLogin(c)}async authenticateWithCustomAuthEndpoint({encryptionKey:a,payload:b}){return this.LoginQuerier.call({params:{encryptionKey:a,payload:b},procedureName:"loginWithCustomAuthEndpoint"})}async loginWithCustomAuthEndpoint({encryptionKey:a,payload:b}){if(!a||0===a.length)throw Error("Encryption key is required for custom auth");await this.preLogin();let c=await this.authenticateWithCustomAuthEndpoint({encryptionKey:a,payload:b});return this.postLogin(c)}async authenticateWithEmailOtp({email:a,otp:b,recoveryCode:c}){return this.LoginQuerier.call({params:{email:a,otp:b,recoveryCode:c},procedureName:"verifyThirdwebEmailLoginOtp"})}async loginWithEmailOtp({email:a,otp:b,recoveryCode:c}){let d=await this.authenticateWithEmailOtp({email:a,otp:b,recoveryCode:c});return this.postLogin(d)}async authenticateWithSmsOtp({phoneNumber:a,otp:b,recoveryCode:c}){return this.LoginQuerier.call({params:{otp:b,phoneNumber:a,recoveryCode:c},procedureName:"verifyThirdwebSmsLoginOtp"})}async loginWithSmsOtp({phoneNumber:a,otp:b,recoveryCode:c}){let d=await this.authenticateWithSmsOtp({otp:b,phoneNumber:a,recoveryCode:c});return this.postLogin(d)}}class ad{constructor({client:a,querier:b,onAuthSuccess:c,ecosystem:d,baseUrl:e,localStorage:f}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=a,this.ecosystem=d,this.AuthQuerier=b,this.localStorage=f,this.onAuthSuccess=c,this.BaseLogin=new ac({baseUrl:e,client:a,ecosystem:d,postLogin:async a=>this.postLogin(a),preLogin:async()=>{await this.preLogin()},querier:b})}async preLogin(){await this.logout()}async postLogin({storedToken:a,walletDetails:b}){return a.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(a.cookieString),await this.onAuthSuccess({storedToken:a,walletDetails:b})}async loginWithAuthToken(a,b){"Backend"!==a.storedToken.authProvider&&await this.preLogin();let c=await i({authToken:a.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!c)throw Error("Cannot login, no user found for auth token");if(c.wallets.length>0&&c.wallets[0]?.type==="enclave")return this.postLogin({storedToken:a.storedToken,walletDetails:{walletAddress:c.wallets[0].address}});if(0===c.wallets.length){let b=await aa({authToken:a.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:a.storedToken,walletDetails:{walletAddress:b.address}})}let d=await this.AuthQuerier.call({params:{recoveryCode:b,storedToken:a.storedToken},procedureName:"loginWithStoredTokenDetails"});return this.postLogin(d)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(a){return this.BaseLogin.loginWithIframe(a)}async authenticateWithIframe(a){return this.BaseLogin.authenticateWithIframe(a)}async loginWithCustomJwt(a){return this.BaseLogin.loginWithCustomJwt(a)}async authenticateWithCustomJwt(a){return this.BaseLogin.authenticateWithCustomJwt(a)}async loginWithCustomAuthEndpoint(a){return this.BaseLogin.loginWithCustomAuthEndpoint(a)}async authenticateWithCustomAuthEndpoint(a){return this.BaseLogin.authenticateWithCustomAuthEndpoint(a)}async sendEmailLoginOtp({email:a}){return this.BaseLogin.sendEmailLoginOtp({email:a})}async sendSmsLoginOtp({phoneNumber:a}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:a})}async loginWithEmailOtp(a){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(a)}async authenticateWithEmailOtp(a){return this.BaseLogin.authenticateWithEmailOtp(a)}async loginWithSmsOtp(a){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(a)}async authenticateWithSmsOtp(a){return this.BaseLogin.authenticateWithSmsOtp(a)}async logout(){let a=await this.localStorage.removeAuthCookie(),b=await this.localStorage.removeWalletUserId();return{success:a||b}}}var ae=c(52706);let af=async a=>{let{client:b,ecosystem:c}=a,d=(0,r.f)({authOption:a.strategy,client:b,ecosystem:c}),e={"Content-Type":"application/json","x-client-id":b.clientId};c?.id&&(e["x-ecosystem-id"]=c.id),c?.partnerId&&(e["x-ecosystem-partner-id"]=c.partnerId);let f=(()=>{switch(a.strategy){case"email":return{email:a.email};case"phone":return{phone:a.phoneNumber}}})(),g=await fetch(d,{body:(0,j.stringify)(f),headers:e,method:"POST"});if(!g.ok)throw Error("Failed to send verification code");return await g.json()},ag=async a=>{let{client:b,ecosystem:c}=a,d=(0,r.K)({authOption:a.strategy,client:a.client,ecosystem:a.ecosystem}),e={"Content-Type":"application/json","x-client-id":b.clientId};c?.id&&(e["x-ecosystem-id"]=c.id),c?.partnerId&&(e["x-ecosystem-partner-id"]=c.partnerId);let f=(()=>{switch(a.strategy){case"email":return{code:a.verificationCode,email:a.email};case"phone":return{code:a.verificationCode,phone:a.phoneNumber}}})(),g=await fetch(d,{body:(0,j.stringify)(f),headers:e,method:"POST"});if(!g.ok)throw Error("Failed to verify verification code");return await g.json()};class ah{constructor({client:a,ecosystem:b,querier:c,localStorage:d}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=a,this.ecosystem=b,this.walletManagerQuerier=c,this.localStorage=d}async postWalletSetUp(a){a.deviceShareStored&&await this.localStorage.saveDeviceShare(a.deviceShareStored,a.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){let a=await this.walletManagerQuerier.call({params:void 0,procedureName:"getUserStatus"});return"Logged In, Wallet Initialized"===a.status?{status:"Logged In, Wallet Initialized",...a.user,account:await this.getAccount()}:"Logged In, New Device"===a.status?{status:"Logged In, New Device",...a.user}:"Logged In, Wallet Uninitialized"===a.status?{status:"Logged In, Wallet Uninitialized",...a.user}:{status:a.status}}async getAccount(){let a=this.walletManagerQuerier,b=this.client,c=this.ecosystem?.partnerId,{address:e}=await a.call({params:void 0,procedureName:"getAddress"}),f=async b=>{let e={chainId:b.chainId,data:b.data,gasLimit:b.gas,nonce:b.nonce,to:b.to??void 0,value:b.value};b.maxFeePerGas?(e.accessList=b.accessList,e.maxFeePerGas=b.maxFeePerGas,e.maxPriorityFeePerGas=b.maxPriorityFeePerGas,e.type=2):(e.gasPrice=b.gasPrice,e.type=0);let f=(0,d.getThirdwebDomains)().rpc,{signedTransaction:g}=await a.call({params:{chainId:b.chainId,partnerId:c,rpcEndpoint:`https://${b.chainId}.${f}`,transaction:e},procedureName:"signTransaction"});return g};return{address:(0,L.bv)(e),async sendTransaction(a){let c=(0,K.getRpcClient)({chain:(0,I.Q4)(a.chainId),client:b}),d=await f(a),g=await (0,J.B)(c,d);return(0,H.E)({chainId:a.chainId,client:b,contractAddress:a.to??void 0,gasPrice:a.gasPrice,transactionHash:g,walletAddress:e,walletType:"inApp"}),{transactionHash:g}},async signMessage({message:b}){let d="string"==typeof b?b:b.raw instanceof Uint8Array?b.raw:(0,M.IQ)(b.raw),{signedMessage:e}=await a.call({params:{chainId:1,message:d,partnerId:c},procedureName:"signMessage"});return e},async signTransaction(a){if(!a.chainId)throw Error("chainId required in tx to sign");return f({...a,chainId:a.chainId})},async signTypedData(b){let e=(0,O.y)(b);e.types?.EIP712Domain&&(e.types.EIP712Domain=void 0);let f=e.domain,g=f?.chainId,h={...f?.verifyingContract?{verifyingContract:f?.verifyingContract}:{},name:f?.name,version:f?.version};g&&(h.chainId=g);let i=(0,d.getThirdwebDomains)().rpc,{signedTypedData:j}=await a.call({params:{chainId:Number.parseInt(BigInt(g||1).toString()),domain:h,message:e.message,partnerId:c,rpcEndpoint:`https://${g}.${i}`,types:e.types},procedureName:"signTypedDataV4"});return j}}}}class ai{isClientIdLegacyPaper(a){return!!(a.indexOf("-")>0)&&36===a.length}constructor({client:a,onAuthSuccess:b,ecosystem:c,passkeyDomain:e,storage:h}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(a.clientId))throw Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");let i=(0,d.getThirdwebBaseUrl)("inAppWallet");this.client=a,this.ecosystem=c,this.passkeyDomain=e,this.storage=new t.t({clientId:a.clientId,ecosystem:c,storage:h??("undefined"!=typeof window&&window.localStorage?g.n:f)}),this.querier=new $({baseUrl:i,clientId:a.clientId,ecosystem:c}),this.auth=new ad({baseUrl:i,client:a,ecosystem:c,localStorage:this.storage,onAuthSuccess:async a=>{if(b?.(a),"sharded"===a.storedToken.authDetails.walletType&&(await this.querier.call({params:{storedToken:a.storedToken},procedureName:"migrateFromShardToEnclave"})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(a.storedToken.cookieString),!this.wallet)throw Error("Failed to initialize wallet");let d="deviceShareStored"in a.walletDetails?a.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({deviceShareStored:d,storedToken:a.storedToken}),this.wallet instanceof ah&&await this.querier.call({params:{authCookie:a.storedToken.cookieString,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in a.walletDetails?a.walletDetails.deviceShareStored:null,ecosystemId:c?.id,partnerId:c?.partnerId,walletUserId:a.storedToken.authDetails.userWalletId},procedureName:"initIframe"}),{user:{account:await this.wallet.getAccount(),authDetails:a.storedToken.authDetails,status:"Logged In, Wallet Initialized",walletAddress:a.walletDetails.walletAddress}}},querier:this.querier})}async initializeWallet(a){let b=await this.storage.getAuthCookie();if(!a&&null===b)throw Error("No auth token provided and no stored auth token found to initialize the wallet");let c=await i({authToken:a||b,client:this.client,ecosystem:this.ecosystem});if(!c)throw Error("Cannot initialize wallet, no user logged in");if(0===c.wallets.length)throw Error("Cannot initialize wallet, this user does not have a wallet generated yet");return c.wallets[0]?.type==="enclave"?new T({address:c.wallets[0].address,client:this.client,ecosystem:this.ecosystem,storage:this.storage}):new ah({client:this.client,ecosystem:this.ecosystem,localStorage:this.storage,querier:this.querier})}async getUser(){if(!this.wallet){let a=await this.storage.getAuthCookie();if(!a)return{status:"Logged Out"};this.wallet=await this.initializeWallet(a)}if(!this.wallet)throw Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(a){return af({...a,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(a,b,c){return(0,ae.N)({authOption:a,client:this.client,ecosystem:this.ecosystem,mode:b,redirectUrl:c})}async loginWithAuthToken(a,b){return this.auth.loginWithAuthToken(a,b)}async authenticate(a){let b=a.strategy;switch(b){case"email":case"phone":return ag({...a,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return q({client:this.client,ecosystem:this.ecosystem,payload:a.payload});case"jwt":return w({client:this.client,ecosystem:this.ecosystem,jwt:a.jwt});case"passkey":return this.passkeyAuth(a);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:a.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return(0,ae.x)({authOption:b,client:this.client,closeOpenedWindow:a.closeOpenedWindow,ecosystem:this.ecosystem,openedWindow:a.openedWindow});case"guest":return v({client:this.client,ecosystem:this.ecosystem,storage:this.storage});case"backend":return s({client:this.client,ecosystem:this.ecosystem,walletSecret:a.walletSecret});case"wallet":return F({chain:a.chain,client:this.client,ecosystem:this.ecosystem,wallet:a.wallet})}}async connect(a){let b=a.strategy;switch(b){case"auth_endpoint":case"jwt":{let b=await this.authenticate(a);return await this.loginWithAuthToken(b,a.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:a.email});case"iframe":return this.auth.loginWithModal();case"passkey":{let b=await this.passkeyAuth(a);return this.loginWithAuthToken(b)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{let b=await this.authenticate(a);return await this.auth.loginWithAuthToken(b)}default:var c=b;throw Error((void 0)??`Invalid param: ${c}`)}}async logout(){return await this.auth.logout()}async passkeyAuth(a){let{PasskeyWebClient:b}=await c.e(51910).then(c.bind(c,51910)),{passkeyName:d,storeLastUsedPasskey:e=!0}=a,f=new b,g=this.storage;return"sign-up"===a.type?C({client:this.client,ecosystem:this.ecosystem,passkeyClient:f,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title},storage:e?g:void 0,username:d}):D({client:this.client,ecosystem:this.ecosystem,passkeyClient:f,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title},storage:e?g:void 0})}async linkProfile(a){let{storedToken:b}=await this.authenticate(a);return await x({client:a.client,ecosystem:a.ecosystem||this.ecosystem,storage:this.storage,tokenToLink:b.cookieString})}async unlinkProfile(a,b){return await y({allowAccountDeletion:b,client:this.client,ecosystem:this.ecosystem,profileToUnlink:a,storage:this.storage})}async getProfiles(){return z({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}}};