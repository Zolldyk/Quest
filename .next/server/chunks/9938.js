"use strict";exports.id=9938,exports.ids=[9938],exports.modules={9938:(a,b,c)=>{c.d(b,{fulfillRequest:()=>j});var d=c(37828),e=c(9955),f=c(93633),g=c(71404),h=c(457),i=c(27571);async function j(a){let b,{wallet:j,walletConnectClient:k,thirdwebClient:l,event:{topic:m,id:n,params:{chainId:o,request:p}},handlers:q}=a,r=j.getAccount();if(!r)throw Error("No account connected to provided wallet");try{switch(p.method){case"personal_sign":b=q?.personal_sign?await q.personal_sign({account:r,params:p.params}):await (0,f.N)({account:r,params:p.params});break;case"eth_sign":b=q?.eth_sign?await q.eth_sign({account:r,params:p.params}):await (0,f.N)({account:r,params:p.params});break;case"eth_signTypedData":b=q?.eth_signTypedData?await q.eth_signTypedData({account:r,params:p.params}):await (0,h.l)({account:r,params:p.params});break;case"eth_signTypedData_v4":b=q?.eth_signTypedData_v4?await q.eth_signTypedData_v4({account:r,params:p.params}):await (0,h.l)({account:r,params:p.params});break;case"eth_signTransaction":b=q?.eth_signTransaction?await q.eth_signTransaction({account:r,params:p.params}):await (0,g.b)({account:r,params:p.params});break;case"eth_sendTransaction":{let a=(0,i.p)(o);b=q?.eth_sendTransaction?await q.eth_sendTransaction({account:r,chainId:a,params:p.params}):await (0,e.o)({account:r,chainId:a,params:p.params,thirdwebClient:l});break}case"eth_sendRawTransaction":{let a=(0,i.p)(o);b=q?.eth_sendRawTransaction?await q.eth_sendRawTransaction({account:r,chainId:a,params:p.params}):await (0,d.G)({account:r,chainId:a,params:p.params});break}case"wallet_addEthereumChain":if(q?.wallet_addEthereumChain)b=await q.wallet_addEthereumChain({params:p.params,wallet:j});else throw Error("Unsupported request method: wallet_addEthereumChain");break;case"wallet_switchEthereumChain":if(q?.wallet_switchEthereumChain)b=await q.wallet_switchEthereumChain({params:p.params,wallet:j});else{let{handleSwitchChain:a}=await Promise.resolve().then(c.bind(c,17724));b=await a({params:p.params,wallet:j})}break;default:{let a=q?.[p.method];if(a)b=await a({account:r,chainId:(0,i.p)(o),params:p.params});else throw Error(`Unsupported request method: ${p.method}`)}}}catch(a){b={code:"object"==typeof a&&null!==a&&"code"in a?a.code:500,message:"object"==typeof a&&null!==a&&"message"in a?a.message:"Unknown error"}}k.respond({response:{id:n,jsonrpc:"2.0",result:b},topic:m})}}};