"use strict";exports.id=48821,exports.ids=[7360,48821],exports.modules={7360:(a,b,c)=>{c.r(b),c.d(b,{FN_SELECTOR:()=>h,decodeTotalSupplyResult:()=>n,encodeTotalSupply:()=>m,encodeTotalSupplyParams:()=>l,isTotalSupplySupported:()=>k,totalSupply:()=>o});var d=c(80200),e=c(59654),f=c(28425),g=c(44206);let h="0xbd85b039",i=[{name:"id",type:"uint256"}],j=[{type:"uint256"}];function k(a){return(0,g.F)({availableSelectors:a,method:[h,i,j]})}function l(a){return(0,f.hd)(i,[a.id])}function m(a){return h+l(a).slice(2)}function n(a){return(0,d.n)(j,a)[0]}async function o(a){return(0,e.readContract)({contract:a.contract,method:[h,i,j],params:[a.id]})}},44206:(a,b,c)=>{c.d(b,{F:()=>e});var d=c(55820);function e(a){let b=Array.isArray(a.method)?a.method[0]:(0,d.V)(a.method);return a.availableSelectors.includes(b)}},48821:(a,b,c)=>{c.d(b,{getNFT:()=>l});var d=c(28971),e=c(65366),f=c(19682),g=c(7360),h=c(59654);let i=[{name:"tokenId",type:"uint256"}],j=[{type:"string"}];async function k(a){return(0,h.readContract)({contract:a.contract,method:["0x0e89341c",i,j],params:[a.tokenId]})}async function l(a){let{useIndexer:b=!0}=a;if(b)try{return await m(a)}catch{}return await n(a)}async function m(a){let b=await (0,d.du)({chain:a.contract.chain,client:a.contract.client,contractAddress:a.contract.address,tokenId:a.tokenId});return b||n(a)}async function n(a){let[b,c]=await Promise.all([k({contract:a.contract,tokenId:a.tokenId}),(0,g.totalSupply)({contract:a.contract,id:a.tokenId}).catch(()=>0n)]);return(0,f.parseNFT)(await (0,e.F)({client:a.contract.client,tokenId:a.tokenId,tokenUri:b}).catch(()=>({id:a.tokenId,type:"ERC1155",uri:b})),{chainId:a.contract.chain.id,owner:null,supply:c,tokenAddress:a.contract.address,tokenId:a.tokenId,tokenUri:b,type:"ERC1155"})}},65366:(a,b,c)=>{c.d(b,{F:()=>f});var d=c(81342),e=c(43533);async function f(a){let{client:b,tokenId:f,tokenUri:g}=a;if(g.startsWith("data:application/json;base64"))try{return JSON.parse(function(a){let[,b]=a.split(",");return(0,d.QM)(b)}(g))}catch(a){throw console.error("Failed to fetch base64 encoded NFT",{tokenId:f,tokenUri:g},a),a}let{download:h}=await Promise.resolve().then(c.bind(c,69274));try{if(!g.includes("{id}"))return await (await h({client:b,uri:g})).json()}catch(a){throw console.error("Failed to fetch non-dynamic NFT",{tokenId:f,tokenUri:g},a),a}try{try{return await (await h({client:b,uri:g.replace("{id}",(0,e.cK)(f,{size:32}).slice(2))})).json()}catch{return await (await h({client:b,uri:g.replace("{id}",f.toString())})).json()}}catch(a){throw console.error("Failed to fetch dynamic NFT",{tokenId:f,tokenUri:g},a),a}}}};