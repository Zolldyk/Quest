"use strict";exports.id=83477,exports.ids=[83477],exports.modules={30090:(a,b,c)=>{c.d(b,{N:()=>e,Y:()=>d});let d=["google","apple","facebook","discord","line","x","coinbase","farcaster","telegram","github","twitch","steam"],e=[...d,"guest","backend","email","phone","passkey","wallet"]},80323:(a,b,c)=>{c.d(b,{u:()=>d});let d=(0,c(64656).xH)({blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}],id:1,name:"Ethereum",nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"}})},83477:(a,b,c)=>{c.d(b,{autoConnectInAppWallet:()=>v,connectInAppWallet:()=>u,e:()=>t});var d=c(80323),e=c(30090),f=c(64656),g=c(54468),h=c(48691),i=c(186),j=c(47301);let k=[{components:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],name:"calls",type:"tuple[]"}],l=[];var m=c(13623),n=c(77184),o=c(73501),p=c(87731);let q="0xD6999651Fc0964B9c6B444307a0ab20534a66560";async function r(a){let b=await (0,g._)(a),c=b.length>0&&b.startsWith("0xef0100"),d=`0x${b.slice(8,48)}`;return c&&d.toLowerCase()===q.toLowerCase()}async function s(a){let b=a.timeoutMs||12e4,c=a.intervalMs||1e3,d=Date.now()+b;for(;Date.now()<d;){let b=await (0,p._j)({options:a.options,transactionId:a.transactionId});if(b.transactionHash)return b.transactionHash;await new Promise(a=>setTimeout(a,c))}throw Error(`Timeout waiting for transaction to be mined on chain ${a.options.chain.id} with transactionId: ${a.transactionId}`)}function t(a){return"inApp"===a.id||"embedded"===a.id}async function u(a,b,c){if(b?.auth?.mode!=="popup"&&b?.auth?.mode!==void 0&&c.authenticateWithRedirect){let d=a.strategy;e.Y.includes(d)&&await c.authenticateWithRedirect(d,b?.auth?.mode,b?.auth?.redirectUrl)}return y({authAccount:(await c.connect(a)).user.account,client:a.client,createOptions:b,desiredChain:a.chain})}async function v(a,b,c){a.authResult&&c.loginWithAuthToken&&await c.loginWithAuthToken(a.authResult);let d=await x(c);if(!d)throw Error("Failed to authenticate user.");return y({authAccount:d.account,client:a.client,createOptions:b,desiredChain:a.chain})}async function w(a){let{connectSmartAccount:b}=await Promise.all([c.e(82601),c.e(30072)]).then(c.bind(c,30072));return b({chain:a.chain,client:a.client,personalAccount:a.authAccount},a.smartAccountOptions)}async function x(a){let b=await a.getUser();if("Logged In, Wallet Initialized"===b.status)return b}async function y(a){let b,c,{createOptions:e,authAccount:g,desiredChain:t,client:u}=a,v=e&&"executionMode"in e?e.executionMode:void 0;if(v&&("EIP4337"===v.mode?b=v.smartAccount:"EIP7702"===v.mode&&(c=v)),e&&"smartAccount"in e&&e?.smartAccount&&(b=e.smartAccount),b){let[a,c]=await w({authAccount:g,chain:t,client:u,smartAccountOptions:b});return{account:a,adminAccount:g,chain:c}}if(c){if(!t)throw Error("Chain is required for EIP-7702 execution, pass a chain when connecting the inAppWallet.");return{account:(a=>{let{client:b,adminAccount:c,sponsorGas:d}=a,e=async a=>{let e,g=a[0];if(!g)throw Error("No transactions provided");let t=(0,f.Q4)(g.chainId),u=(0,h.P)({address:c.address,chain:t,client:b});if(!await r(u)){let a=g.nonce?BigInt(g.nonce)+(d?0n:1n):0n,b=await c.signAuthorization?.({address:q,chainId:g.chainId,nonce:a});if(!b)throw Error("Failed to sign authorization");e=b}if(d){let d={calls:a.map(a=>({data:a.data??"0x",target:(0,n.bv)(a.to??""),value:a.value??0n})),uid:(0,o.O)()},h=await c.signTypedData({domain:{chainId:g.chainId,name:"MinimalAccount",verifyingContract:u.address,version:"1"},message:d,primaryType:"WrappedCalls",types:{Call:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],WrappedCalls:[{name:"calls",type:"Call[]"},{name:"uid",type:"bytes32"}]}}),i=await (0,p.CJ)({authorization:e,eoaAddress:(0,n.bv)(c.address),options:{chain:(0,f.Q4)(g.chainId),client:b},signature:h,wrappedCalls:d});return{transactionHash:await s({options:{chain:(0,f.Q4)(g.chainId),client:b},transactionId:i.transactionId})}}let v=function(a){let b=(0,j.O)(async()=>"asyncParams"in a?await a.asyncParams():a);return(0,i.m)({accessList:async()=>(await b()).overrides?.accessList,authorizationList:async()=>(await b()).overrides?.authorizationList,contract:a.contract,erc20Value:async()=>(await b()).overrides?.erc20Value,extraGas:async()=>(await b()).overrides?.extraGas,gas:async()=>(await b()).overrides?.gas,gasPrice:async()=>(await b()).overrides?.gasPrice,maxFeePerGas:async()=>(await b()).overrides?.maxFeePerGas,maxPriorityFeePerGas:async()=>(await b()).overrides?.maxPriorityFeePerGas,method:["0x3f707e6b",k,l],nonce:async()=>(await b()).overrides?.nonce,params:async()=>[(await b()).calls],value:async()=>(await b()).overrides?.value})}({calls:a.map(a=>({data:a.data??"0x",target:a.to??"",value:a.value??0n})),contract:u,overrides:{authorizationList:e?[e]:void 0,value:a.reduce((a,b)=>a+(b.value??0n),0n)}}),w=await (0,m.$)({from:c.address,transaction:v});return c.sendTransaction(w)};return{address:c.address,sendBatchTransaction:async a=>e(a),sendTransaction:async a=>e([a]),signMessage:({message:a,originalMessage:b,chainId:d})=>c.signMessage({chainId:d,message:a,originalMessage:b}),signTypedData:a=>c.signTypedData(a)}})({adminAccount:g,client:u,sponsorGas:c.sponsorGas}),adminAccount:g,chain:t}}return{account:g,chain:t||d.u}}}};