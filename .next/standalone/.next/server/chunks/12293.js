"use strict";exports.id=12293,exports.ids=[12293],exports.modules={12293:(a,b,c)=>{c.d(b,{onSessionProposal:()=>f});var d=c(80033),e=c(74402);async function f(a){let{wallet:b,walletConnectClient:c,event:f,chains:i,onConnect:j}=a,k=b.getAccount();if(!k)throw Error("No account connected to provided wallet");let l=f.verifyContext?.verified?.origin;l&&await g({origin:l,walletConnectClient:c});let m=await h({account:k,chains:i,sessionProposal:f,walletConnectClient:c});await (0,e.E1)(m),b.subscribe("disconnect",()=>{(0,d.EF)({session:m,walletConnectClient:c})}),j?.(m)}async function g({walletConnectClient:a,origin:b}){for(let c of(await (0,e.S5)()))c.origin===b&&await (0,d.EF)({session:c,walletConnectClient:a})}async function h({account:a,walletConnectClient:b,sessionProposal:c,chains:d}){if(!c.params.requiredNamespaces?.eip155&&!c.params.optionalNamespaces?.eip155)throw Error("No EIP155 namespace found in Wallet Connect session proposal");let e={chains:[...Array.from(new Set([...c.params.requiredNamespaces?.eip155?.chains?.map(b=>`${b}:${a.address}`)??[],...c.params.optionalNamespaces?.eip155?.chains?.map(b=>`${b}:${a.address}`)??[],...d?.map(b=>`eip155:${b.id}:${a.address}`)??[]]))],events:[...c.params.requiredNamespaces?.eip155?.events??[],...c.params.optionalNamespaces?.eip155?.events??[]],methods:[...c.params.requiredNamespaces?.eip155?.methods??[],...c.params.optionalNamespaces?.eip155?.methods??[]]},f=await b.approve({id:c.id,namespaces:{eip155:{accounts:e.chains,events:e.events,methods:e.methods}}}),g=await f.acknowledged();return{origin:c.verifyContext?.verified?.origin||"Unknown origin",topic:g.topic}}}};