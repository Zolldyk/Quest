// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminAdded extends ethereum.Event {
  get params(): AdminAdded__Params {
    return new AdminAdded__Params(this);
  }
}

export class AdminAdded__Params {
  _event: AdminAdded;

  constructor(event: AdminAdded) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get addedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AdminRemoved extends ethereum.Event {
  get params(): AdminRemoved__Params {
    return new AdminRemoved__Params(this);
  }
}

export class AdminRemoved__Params {
  _event: AdminRemoved;

  constructor(event: AdminRemoved) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get removedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NFTMinterSet extends ethereum.Event {
  get params(): NFTMinterSet__Params {
    return new NFTMinterSet__Params(this);
  }
}

export class NFTMinterSet__Params {
  _event: NFTMinterSet;

  constructor(event: NFTMinterSet) {
    this._event = event;
  }

  get oldMinter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newMinter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class QuestCreated extends ethereum.Event {
  get params(): QuestCreated__Params {
    return new QuestCreated__Params(this);
  }
}

export class QuestCreated__Params {
  _event: QuestCreated;

  constructor(event: QuestCreated) {
    this._event = event;
  }

  get questId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get rewardAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class QuestRejected extends ethereum.Event {
  get params(): QuestRejected__Params {
    return new QuestRejected__Params(this);
  }
}

export class QuestRejected__Params {
  _event: QuestRejected;

  constructor(event: QuestRejected) {
    this._event = event;
  }

  get submissionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[3].value.toString();
  }

  get verifiedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class QuestStatusUpdated extends ethereum.Event {
  get params(): QuestStatusUpdated__Params {
    return new QuestStatusUpdated__Params(this);
  }
}

export class QuestStatusUpdated__Params {
  _event: QuestStatusUpdated;

  constructor(event: QuestStatusUpdated) {
    this._event = event;
  }

  get questId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class QuestSubmitted extends ethereum.Event {
  get params(): QuestSubmitted__Params {
    return new QuestSubmitted__Params(this);
  }
}

export class QuestSubmitted__Params {
  _event: QuestSubmitted;

  constructor(event: QuestSubmitted) {
    this._event = event;
  }

  get submissionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tweetUrl(): string {
    return this._event.parameters[3].value.toString();
  }

  get submitTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class QuestVerified extends ethereum.Event {
  get params(): QuestVerified__Params {
    return new QuestVerified__Params(this);
  }
}

export class QuestVerified__Params {
  _event: QuestVerified;

  constructor(event: QuestVerified) {
    this._event = event;
  }

  get submissionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get verifiedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get nftTokenId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class RewardDistributed extends ethereum.Event {
  get params(): RewardDistributed__Params {
    return new RewardDistributed__Params(this);
  }
}

export class RewardDistributed__Params {
  _event: RewardDistributed;

  constructor(event: RewardDistributed) {
    this._event = event;
  }

  get submissionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get questId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get player(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class QuestManager__getConfigResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getStakingPool(): Address {
    return this.value0;
  }

  getNftMinter(): Address {
    return this.value1;
  }

  getTotalQuests(): BigInt {
    return this.value2;
  }

  getNextQuestId(): BigInt {
    return this.value3;
  }

  getNextSubmissionId(): BigInt {
    return this.value4;
  }
}

export class QuestManager__getContractStatsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getTotalQuests(): BigInt {
    return this.value0;
  }

  getTotalSubmissions(): BigInt {
    return this.value1;
  }

  getTotalCompletedQuests(): BigInt {
    return this.value2;
  }

  getAdminCount(): BigInt {
    return this.value3;
  }
}

export class QuestManager__getQuestResultValue0Struct extends ethereum.Tuple {
  get questId(): BigInt {
    return this[0].toBigInt();
  }

  get title(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get requirements(): string {
    return this[3].toString();
  }

  get rewardAmount(): BigInt {
    return this[4].toBigInt();
  }

  get isActive(): boolean {
    return this[5].toBoolean();
  }

  get startTime(): BigInt {
    return this[6].toBigInt();
  }

  get endTime(): BigInt {
    return this[7].toBigInt();
  }

  get maxCompletions(): BigInt {
    return this[8].toBigInt();
  }

  get currentCompletions(): BigInt {
    return this[9].toBigInt();
  }

  get creator(): Address {
    return this[10].toAddress();
  }

  get createTime(): BigInt {
    return this[11].toBigInt();
  }
}

export class QuestManager__getSubmissionResultValue0Struct extends ethereum.Tuple {
  get questId(): BigInt {
    return this[0].toBigInt();
  }

  get player(): Address {
    return this[1].toAddress();
  }

  get tweetUrl(): string {
    return this[2].toString();
  }

  get submitTime(): BigInt {
    return this[3].toBigInt();
  }

  get status(): i32 {
    return this[4].toI32();
  }

  get verifyTime(): BigInt {
    return this[5].toBigInt();
  }

  get verifiedBy(): Address {
    return this[6].toAddress();
  }

  get nftTokenId(): BigInt {
    return this[7].toBigInt();
  }

  get rejectionReason(): string {
    return this[8].toString();
  }
}

export class QuestManager extends ethereum.SmartContract {
  static bind(address: Address): QuestManager {
    return new QuestManager("QuestManager", address);
  }

  createQuest(
    title: string,
    description: string,
    requirements: string,
    rewardAmount: BigInt,
    duration: BigInt,
    maxCompletions: BigInt,
  ): BigInt {
    let result = super.call(
      "createQuest",
      "createQuest(string,string,string,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(requirements),
        ethereum.Value.fromUnsignedBigInt(rewardAmount),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(maxCompletions),
      ],
    );

    return result[0].toBigInt();
  }

  try_createQuest(
    title: string,
    description: string,
    requirements: string,
    rewardAmount: BigInt,
    duration: BigInt,
    maxCompletions: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createQuest",
      "createQuest(string,string,string,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromString(title),
        ethereum.Value.fromString(description),
        ethereum.Value.fromString(requirements),
        ethereum.Value.fromUnsignedBigInt(rewardAmount),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(maxCompletions),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActiveQuests(): Array<BigInt> {
    let result = super.call(
      "getActiveQuests",
      "getActiveQuests():(uint256[])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_getActiveQuests(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getActiveQuests",
      "getActiveQuests():(uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getConfig(): QuestManager__getConfigResult {
    let result = super.call(
      "getConfig",
      "getConfig():(address,address,uint256,uint256,uint256)",
      [],
    );

    return new QuestManager__getConfigResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_getConfig(): ethereum.CallResult<QuestManager__getConfigResult> {
    let result = super.tryCall(
      "getConfig",
      "getConfig():(address,address,uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestManager__getConfigResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  getContractStats(): QuestManager__getContractStatsResult {
    let result = super.call(
      "getContractStats",
      "getContractStats():(uint256,uint256,uint256,uint256)",
      [],
    );

    return new QuestManager__getContractStatsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_getContractStats(): ethereum.CallResult<QuestManager__getContractStatsResult> {
    let result = super.tryCall(
      "getContractStats",
      "getContractStats():(uint256,uint256,uint256,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new QuestManager__getContractStatsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  getDefaultQuestId(): BigInt {
    let result = super.call(
      "getDefaultQuestId",
      "getDefaultQuestId():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getDefaultQuestId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDefaultQuestId",
      "getDefaultQuestId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPendingSubmissions(): Array<BigInt> {
    let result = super.call(
      "getPendingSubmissions",
      "getPendingSubmissions():(uint256[])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_getPendingSubmissions(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPendingSubmissions",
      "getPendingSubmissions():(uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPlayerSubmissions(player: Address): Array<BigInt> {
    let result = super.call(
      "getPlayerSubmissions",
      "getPlayerSubmissions(address):(uint256[])",
      [ethereum.Value.fromAddress(player)],
    );

    return result[0].toBigIntArray();
  }

  try_getPlayerSubmissions(
    player: Address,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPlayerSubmissions",
      "getPlayerSubmissions(address):(uint256[])",
      [ethereum.Value.fromAddress(player)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getQuest(questId: BigInt): QuestManager__getQuestResultValue0Struct {
    let result = super.call(
      "getQuest",
      "getQuest(uint256):((uint256,string,string,string,uint256,bool,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(questId)],
    );

    return changetype<QuestManager__getQuestResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getQuest(
    questId: BigInt,
  ): ethereum.CallResult<QuestManager__getQuestResultValue0Struct> {
    let result = super.tryCall(
      "getQuest",
      "getQuest(uint256):((uint256,string,string,string,uint256,bool,uint256,uint256,uint256,uint256,address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(questId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<QuestManager__getQuestResultValue0Struct>(value[0].toTuple()),
    );
  }

  getQuestSubmissions(questId: BigInt): Array<BigInt> {
    let result = super.call(
      "getQuestSubmissions",
      "getQuestSubmissions(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(questId)],
    );

    return result[0].toBigIntArray();
  }

  try_getQuestSubmissions(questId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getQuestSubmissions",
      "getQuestSubmissions(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(questId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getSubmission(
    submissionId: BigInt,
  ): QuestManager__getSubmissionResultValue0Struct {
    let result = super.call(
      "getSubmission",
      "getSubmission(uint256):((uint256,address,string,uint256,uint8,uint256,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(submissionId)],
    );

    return changetype<QuestManager__getSubmissionResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getSubmission(
    submissionId: BigInt,
  ): ethereum.CallResult<QuestManager__getSubmissionResultValue0Struct> {
    let result = super.tryCall(
      "getSubmission",
      "getSubmission(uint256):((uint256,address,string,uint256,uint8,uint256,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(submissionId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<QuestManager__getSubmissionResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  hasPlayerCompletedQuest(player: Address, questId: BigInt): boolean {
    let result = super.call(
      "hasPlayerCompletedQuest",
      "hasPlayerCompletedQuest(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(player),
        ethereum.Value.fromUnsignedBigInt(questId),
      ],
    );

    return result[0].toBoolean();
  }

  try_hasPlayerCompletedQuest(
    player: Address,
    questId: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasPlayerCompletedQuest",
      "hasPlayerCompletedQuest(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(player),
        ethereum.Value.fromUnsignedBigInt(questId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAdmin(account: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class CreateDefaultQuestCall extends ethereum.Call {
  get inputs(): CreateDefaultQuestCall__Inputs {
    return new CreateDefaultQuestCall__Inputs(this);
  }

  get outputs(): CreateDefaultQuestCall__Outputs {
    return new CreateDefaultQuestCall__Outputs(this);
  }
}

export class CreateDefaultQuestCall__Inputs {
  _call: CreateDefaultQuestCall;

  constructor(call: CreateDefaultQuestCall) {
    this._call = call;
  }
}

export class CreateDefaultQuestCall__Outputs {
  _call: CreateDefaultQuestCall;

  constructor(call: CreateDefaultQuestCall) {
    this._call = call;
  }
}

export class CreateQuestCall extends ethereum.Call {
  get inputs(): CreateQuestCall__Inputs {
    return new CreateQuestCall__Inputs(this);
  }

  get outputs(): CreateQuestCall__Outputs {
    return new CreateQuestCall__Outputs(this);
  }
}

export class CreateQuestCall__Inputs {
  _call: CreateQuestCall;

  constructor(call: CreateQuestCall) {
    this._call = call;
  }

  get title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get requirements(): string {
    return this._call.inputValues[2].value.toString();
  }

  get rewardAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get maxCompletions(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateQuestCall__Outputs {
  _call: CreateQuestCall;

  constructor(call: CreateQuestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get stakingPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get initialOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetNFTMinterCall extends ethereum.Call {
  get inputs(): SetNFTMinterCall__Inputs {
    return new SetNFTMinterCall__Inputs(this);
  }

  get outputs(): SetNFTMinterCall__Outputs {
    return new SetNFTMinterCall__Outputs(this);
  }
}

export class SetNFTMinterCall__Inputs {
  _call: SetNFTMinterCall;

  constructor(call: SetNFTMinterCall) {
    this._call = call;
  }

  get nftMinter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNFTMinterCall__Outputs {
  _call: SetNFTMinterCall;

  constructor(call: SetNFTMinterCall) {
    this._call = call;
  }
}

export class SubmitQuestCall extends ethereum.Call {
  get inputs(): SubmitQuestCall__Inputs {
    return new SubmitQuestCall__Inputs(this);
  }

  get outputs(): SubmitQuestCall__Outputs {
    return new SubmitQuestCall__Outputs(this);
  }
}

export class SubmitQuestCall__Inputs {
  _call: SubmitQuestCall;

  constructor(call: SubmitQuestCall) {
    this._call = call;
  }

  get questId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tweetUrl(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SubmitQuestCall__Outputs {
  _call: SubmitQuestCall;

  constructor(call: SubmitQuestCall) {
    this._call = call;
  }
}

export class ToggleQuestStatusCall extends ethereum.Call {
  get inputs(): ToggleQuestStatusCall__Inputs {
    return new ToggleQuestStatusCall__Inputs(this);
  }

  get outputs(): ToggleQuestStatusCall__Outputs {
    return new ToggleQuestStatusCall__Outputs(this);
  }
}

export class ToggleQuestStatusCall__Inputs {
  _call: ToggleQuestStatusCall;

  constructor(call: ToggleQuestStatusCall) {
    this._call = call;
  }

  get questId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ToggleQuestStatusCall__Outputs {
  _call: ToggleQuestStatusCall;

  constructor(call: ToggleQuestStatusCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class VerifyQuestCall extends ethereum.Call {
  get inputs(): VerifyQuestCall__Inputs {
    return new VerifyQuestCall__Inputs(this);
  }

  get outputs(): VerifyQuestCall__Outputs {
    return new VerifyQuestCall__Outputs(this);
  }
}

export class VerifyQuestCall__Inputs {
  _call: VerifyQuestCall;

  constructor(call: VerifyQuestCall) {
    this._call = call;
  }

  get submissionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get rejectionReason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class VerifyQuestCall__Outputs {
  _call: VerifyQuestCall;

  constructor(call: VerifyQuestCall) {
    this._call = call;
  }
}
